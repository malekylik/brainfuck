'use strict';
var _, o = [],
    c = 0,
    p = 0,
    j = 0,
    i = [],
    m = new Uint8Array(30000);

function q(i) {
    self.postMessage({
        o: [i]
    })
}
m[p] += 13;
if ((_ = m[p]) !== 0) {
    m[p + 1] += _ * 2;
    m[p + 4] += _ * 5;
    m[p + 5] += _ * 2;
    m[p + 6] += _;
    m[p] = 0;
}
m[p + 5] += 6;
m[p + 6] -= 3;
m[p + 16] += 15;
while (m[p + 16] !== 0) {
    while (m[p + 16] !== 0) {
        p += 9;
    }
    m[p + 16]++;
    while (m[p + 16] !== 0) {
        p -= 9;
    }
    m[p + 25]--;
    p += 9;
}
m[p + 16]++;
while (m[p + 16] !== 0) {
    if ((_ = m[p + 24]) !== 0) {
        m[p + 24] = 0;
    }
    p += 9;
}
while (m[p + 7] !== 0) {
    p -= 9;
}
if ((_ = m[p + 15]) !== 0) {
    m[p + 15] = 0;
}
m[p + 15]++;
m[p + 8] += 5;
while (m[p + 8] !== 0) {
    m[p + 8]--;
    if ((_ = m[p + 8]) !== 0) {
        m[p + 17] += _;
        m[p + 8] = 0;
    }
    p += 9;
}
m[p + 15]++;
m[p + 42]++;
while (m[p + 25] !== 0) {
    p -= 9;
}
if ((_ = m[p + 28]) !== 0) {
    m[p + 28] = 0;
}
m[p + 28]++;
while (m[p + 28] !== 0) {
    while (m[p + 34] !== 0) {
        if ((_ = m[p + 41]) !== 0) {
            m[p + 41] = 0;
        }
        p += 9;
    }
    while (m[p + 25] !== 0) {
        p -= 9;
    }
    if ((_ = m[p + 32]) !== 0) {
        m[p + 32] = 0;
    }
    m[p + 32]++;
    m[p + 26] += 4;
    while (m[p + 26] !== 0) {
        m[p + 26]--;
        if ((_ = m[p + 26]) !== 0) {
            m[p + 35] += _;
            m[p + 26] = 0;
        }
        p += 9;
    }
    m[p + 32]++;
    m[p + 26] += 7;
    while (m[p + 26] !== 0) {
        m[p + 26]--;
        if ((_ = m[p + 26]) !== 0) {
            m[p + 35] += _;
            m[p + 26] = 0;
        }
        p += 9;
    }
    m[p + 32]++;
    while (m[p + 16] !== 0) {
        p -= 9;
    }
    while (m[p + 19] !== 0) {
        if ((_ = m[p + 19]) !== 0) {
            m[p + 19] = 0;
        }
        while (m[p + 25] !== 0) {
            if ((_ = m[p + 32]) !== 0) {
                m[p + 26] += _;
                m[p + 32] = 0;
            }
            if ((_ = m[p + 26]) !== 0) {
                m[p + 27] += _;
                m[p + 30] += _;
                m[p + 32] += _;
                m[p + 26] = 0;
            }
            p += 9;
        }
        while (m[p + 16] !== 0) {
            p -= 9;
        }
        while (m[p + 25] !== 0) {
            if ((_ = m[p + 33]) !== 0) {
                m[p + 26] += _;
                m[p + 33] = 0;
            }
            if ((_ = m[p + 26]) !== 0) {
                m[p + 28] += _;
                m[p + 31] += _;
                m[p + 33] += _;
                m[p + 26] = 0;
            }
            p += 9;
        }
        while (m[p + 16] !== 0) {
            p -= 9;
        }
        if ((_ = m[p + 23]) !== 0) {
            m[p + 16] += _;
            m[p + 23] = 0;
        }
        if ((_ = m[p + 16]) !== 0) {
            m[p + 21] += _;
            m[p + 23] += _;
            m[p + 16] = 0;
        }
        m[p + 25] += 15;
        while (m[p + 25] !== 0) {
            while (m[p + 25] !== 0) {
                p += 9;
            }
            m[p + 25]++;
            if ((_ = m[p + 26]) !== 0) {
                m[p + 26] = 0;
            }
            if ((_ = m[p + 27]) !== 0) {
                m[p + 27] = 0;
            }
            if ((_ = m[p + 28]) !== 0) {
                m[p + 28] = 0;
            }
            if ((_ = m[p + 29]) !== 0) {
                m[p + 29] = 0;
            }
            if ((_ = m[p + 30]) !== 0) {
                m[p + 30] = 0;
            }
            if ((_ = m[p + 31]) !== 0) {
                m[p + 31] = 0;
            }
            if ((_ = m[p + 32]) !== 0) {
                m[p + 32] = 0;
            }
            if ((_ = m[p + 33]) !== 0) {
                m[p + 33] = 0;
            }
            if ((_ = m[p + 34]) !== 0) {
                m[p + 34] = 0;
            }
            while (m[p + 25] !== 0) {
                p -= 9;
            }
            m[p + 34]--;
            p += 9;
        }
        m[p + 25]++;
        while (m[p + 25] !== 0) {
            m[p + 26]++;
            p += 9;
        }
        while (m[p + 16] !== 0) {
            p -= 9;
        }
        while (m[p + 25] !== 0) {
            m[p + 26]--;
            if ((_ = m[p + 30]) !== 0) {
                m[p + 26] += _;
                m[p + 30] = 0;
            }
            while (m[p + 26] !== 0) {
                m[p + 26]--;
                m[p + 30]++;
                while (m[p + 25] !== 0) {
                    m[p + 25]--;
                    if ((_ = m[p + 27]) !== 0) {
                        m[p + 25] += _;
                        m[p + 27] = 0;
                    }
                    if ((_ = m[p + 25]) !== 0) {
                        m[p + 27] += _;
                        m[p + 29] += _;
                        m[p + 25] = 0;
                    }
                    m[p + 25]++;
                    p += 9;
                }
                while (m[p + 17] !== 0) {
                    p -= 9;
                }
                p -= 9;
            }
            while (m[p + 35] !== 0) {
                p += 9;
            }
            while (m[p + 26] !== 0) {
                if ((_ = m[p + 27]) !== 0) {
                    m[p + 36] += _;
                    m[p + 27] = 0;
                }
                p -= 9;
            }
            if ((_ = m[p + 27]) !== 0) {
                m[p + 36] += _;
                m[p + 27] = 0;
            }
            m[p + 26]++;
            p += 9;
        }
        while (m[p + 16] !== 0) {
            if ((_ = m[p + 17]) !== 0) {
                m[p + 17] = 0;
            }
            m[p + 16]--;
            while (m[p + 20] !== 0) {
                m[p + 20]--;
                m[p + 16]++;
                if ((_ = m[p + 17]) !== 0) {
                    m[p + 16] += _ * -1;
                    m[p + 11] += _;
                    m[p + 17] = 0;
                }
                if ((_ = m[p + 16]) !== 0) {
                    m[p + 17] += _;
                    m[p + 16] = 0;
                }
            }
            if ((_ = m[p + 17]) !== 0) {
                m[p + 20] += _;
                m[p + 17] = 0;
            }
            m[p + 16]++;
            p -= 9;
        }
        while (m[p + 25] !== 0) {
            m[p + 26]++;
            p += 9;
        }
        while (m[p + 16] !== 0) {
            p -= 9;
        }
        while (m[p + 25] !== 0) {
            m[p + 26]--;
            if ((_ = m[p + 31]) !== 0) {
                m[p + 26] += _;
                m[p + 31] = 0;
            }
            while (m[p + 26] !== 0) {
                m[p + 26]--;
                m[p + 31]++;
                while (m[p + 25] !== 0) {
                    m[p + 25]--;
                    if ((_ = m[p + 28]) !== 0) {
                        m[p + 25] += _;
                        m[p + 28] = 0;
                    }
                    if ((_ = m[p + 25]) !== 0) {
                        m[p + 28] += _;
                        m[p + 29] += _;
                        m[p + 25] = 0;
                    }
                    m[p + 25]++;
                    p += 9;
                }
                while (m[p + 17] !== 0) {
                    p -= 9;
                }
                p -= 9;
            }
            while (m[p + 35] !== 0) {
                p += 9;
            }
            while (m[p + 26] !== 0) {
                if ((_ = m[p + 28]) !== 0) {
                    m[p + 37] += _;
                    m[p + 28] = 0;
                }
                p -= 9;
            }
            if ((_ = m[p + 28]) !== 0) {
                m[p + 37] += _;
                m[p + 28] = 0;
            }
            m[p + 26]++;
            p += 9;
        }
        while (m[p + 16] !== 0) {
            if ((_ = m[p + 17]) !== 0) {
                m[p + 17] = 0;
            }
            m[p + 16]--;
            while (m[p + 20] !== 0) {
                m[p + 20]--;
                m[p + 16]++;
                if ((_ = m[p + 17]) !== 0) {
                    m[p + 16] += _ * -1;
                    m[p + 11] += _;
                    m[p + 17] = 0;
                }
                if ((_ = m[p + 16]) !== 0) {
                    m[p + 17] += _;
                    m[p + 16] = 0;
                }
            }
            if ((_ = m[p + 17]) !== 0) {
                m[p + 20] += _;
                m[p + 17] = 0;
            }
            m[p + 16]++;
            p -= 9;
        }
        while (m[p + 25] !== 0) {
            if ((_ = m[p + 29]) !== 0) {
                m[p - 7] += _;
                m[p + 29] = 0;
            }
            p += 9;
        }
        while (m[p + 16] !== 0) {
            p -= 9;
        }
        m[p + 25] += 15;
        while (m[p + 25] !== 0) {
            while (m[p + 25] !== 0) {
                p += 9;
            }
            m[p + 16]--;
            while (m[p + 7] !== 0) {
                p -= 9;
            }
            m[p + 16]--;
            p -= 9;
        }
        m[p + 25]++;
        m[p + 46]++;
        while (m[p + 43] !== 0) {
            p -= 9;
        }
        while (m[p + 52] !== 0) {
            if ((_ = m[p + 55]) !== 0) {
                m[p + 52] += _ * -1;
                m[p + 55] = 0;
            }
            m[p + 55]++;
            while (m[p + 52] !== 0) {
                m[p + 52]--;
                m[p + 55]--;
                if ((_ = m[p + 56]) !== 0) {
                    m[p + 52] += _;
                    m[p + 56] = 0;
                }
                while (m[p + 52] !== 0) {
                    m[p + 52]--;
                    m[p + 56]++;
                    while (m[p + 43] !== 0) {
                        p -= 9;
                    }
                    if ((_ = m[p + 47]) !== 0) {
                        m[p + 47] = 0;
                    }
                    m[p + 47]++;
                    while (m[p + 52] !== 0) {
                        p += 9;
                    }
                    m[p + 53]++;
                }
            }
            m[p + 52]++;
            if ((_ = m[p + 56]) !== 0) {
                m[p + 52] += _ * -1;
                m[p + 56] = 0;
            }
            m[p + 56]++;
            while (m[p + 52] !== 0) {
                m[p + 52]--;
                m[p + 56]--;
                if ((_ = m[p + 55]) !== 0) {
                    m[p + 52] += _;
                    m[p + 55] = 0;
                }
                while (m[p + 52] !== 0) {
                    m[p + 52]--;
                    m[p + 55]++;
                    while (m[p + 43] !== 0) {
                        p -= 9;
                    }
                    if ((_ = m[p + 46]) !== 0) {
                        m[p + 46] = 0;
                    }
                    m[p + 46]++;
                    while (m[p + 52] !== 0) {
                        p += 9;
                    }
                    if ((_ = m[p + 53]) !== 0) {
                        m[p + 53] = 0;
                    }
                    m[p + 53]++;
                }
            }
            m[p + 52]++;
            while (m[p + 53] !== 0) {
                m[p + 53]--;
                while (m[p + 52] !== 0) {
                    p += 9;
                }
                p -= 9;
            }
            p += 9;
        }
        while (m[p + 43] !== 0) {
            p -= 9;
        }
        if ((_ = m[p + 36]) !== 0) {
            m[p + 37] += _;
            m[p + 40] += _ * -1;
            m[p + 36] = 0;
        }
        m[p + 45] += 26;
        if ((_ = m[p + 47]) !== 0) {
            m[p + 43] += _;
            m[p + 47] = 0;
        }
        while (m[p + 43] !== 0) {
            m[p + 43]--;
            m[p + 47]++;
            if ((_ = m[p + 45]) !== 0) {
                m[p + 45] = 0;
            }
        }
        while (m[p + 45] !== 0) {
            m[p + 38]++;
            while (m[p + 37] !== 0) {
                m[p + 37]--;
                m[p + 36]++;
                m[p + 40]++;
                if ((_ = m[p + 38]) !== 0) {
                    m[p + 38] = 0;
                }
                p += 1;
            }
            while (m[p + 38] !== 0) {
                m[p + 38]--;
                if ((_ = m[p + 36]) !== 0) {
                    m[p + 37] += _;
                    m[p + 40] += _ * -1;
                    m[p + 36] = 0;
                }
                p += 1;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 53]) !== 0) {
                    m[p + 53] = 0;
                }
                if ((_ = m[p + 54]) !== 0) {
                    m[p + 54] = 0;
                }
                if ((_ = m[p + 55]) !== 0) {
                    m[p + 55] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            if ((_ = m[p + 45]) !== 0) {
                m[p + 45] = 0;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 56]) !== 0) {
                    m[p + 52] += _;
                    m[p + 56] = 0;
                }
                if ((_ = m[p + 52]) !== 0) {
                    m[p + 53] += _;
                    m[p + 56] += _;
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 53]) !== 0) {
                    m[p + 44] += _;
                    m[p + 53] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            m[p + 51] += 15;
            while (m[p + 51] !== 0) {
                while (m[p + 51] !== 0) {
                    p += 9;
                }
                m[p + 51]++;
                if ((_ = m[p + 52]) !== 0) {
                    m[p + 52] = 0;
                }
                if ((_ = m[p + 53]) !== 0) {
                    m[p + 53] = 0;
                }
                if ((_ = m[p + 54]) !== 0) {
                    m[p + 54] = 0;
                }
                if ((_ = m[p + 55]) !== 0) {
                    m[p + 55] = 0;
                }
                if ((_ = m[p + 56]) !== 0) {
                    m[p + 56] = 0;
                }
                if ((_ = m[p + 57]) !== 0) {
                    m[p + 57] = 0;
                }
                if ((_ = m[p + 58]) !== 0) {
                    m[p + 58] = 0;
                }
                if ((_ = m[p + 59]) !== 0) {
                    m[p + 59] = 0;
                }
                if ((_ = m[p + 60]) !== 0) {
                    m[p + 60] = 0;
                }
                while (m[p + 51] !== 0) {
                    p -= 9;
                }
                m[p + 60]--;
                p += 9;
            }
            m[p + 51]++;
            while (m[p + 51] !== 0) {
                m[p + 52]++;
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                m[p + 52]--;
                if ((_ = m[p + 57]) !== 0) {
                    m[p + 52] += _;
                    m[p + 57] = 0;
                }
                while (m[p + 52] !== 0) {
                    m[p + 52]--;
                    m[p + 57]++;
                    while (m[p + 51] !== 0) {
                        m[p + 51]--;
                        if ((_ = m[p + 53]) !== 0) {
                            m[p + 51] += _;
                            m[p + 53] = 0;
                        }
                        if ((_ = m[p + 51]) !== 0) {
                            m[p + 53] += _;
                            m[p + 54] += _;
                            m[p + 51] = 0;
                        }
                        m[p + 51]++;
                        p += 9;
                    }
                    while (m[p + 43] !== 0) {
                        p -= 9;
                    }
                    p -= 9;
                }
                while (m[p + 61] !== 0) {
                    p += 9;
                }
                while (m[p + 52] !== 0) {
                    if ((_ = m[p + 53]) !== 0) {
                        m[p + 62] += _;
                        m[p + 53] = 0;
                    }
                    p -= 9;
                }
                if ((_ = m[p + 53]) !== 0) {
                    m[p + 62] += _;
                    m[p + 53] = 0;
                }
                m[p + 52]++;
                p += 9;
            }
            while (m[p + 42] !== 0) {
                if ((_ = m[p + 43]) !== 0) {
                    m[p + 43] = 0;
                }
                m[p + 42]--;
                while (m[p + 45] !== 0) {
                    m[p + 45]--; // a
                    m[p + 42]++;           // m[p + 42] += a;
                    if ((_ = m[p + 43]) !== 0) { // b
                        m[p + 42] += _ * -1; // m[p + 42] -= m[p + 43]  42 - b
                        m[p + 36] += _; // m[p + 36] += m[p + 43] 36 + b
                        m[p + 43] = 0; // b = 0
                    }
                    if ((_ = m[p + 42]) !== 0) {
                        m[p + 43] += _; //  m[p + 43] += m[p + 42]
                        m[p + 42] = 0;  // m[p + 25] = 0; 
                    } // 43 = 42 42 = 0
                } // m[p + 45] = 0;
                if ((_ = m[p + 43]) !== 0) {
                    m[p + 45] += _;
                    m[p + 43] = 0;
                }
                m[p + 42]++;
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 57]) !== 0) {
                    m[p + 52] += _;
                    m[p + 57] = 0;
                }
                if ((_ = m[p + 52]) !== 0) {
                    m[p + 53] += _;
                    m[p + 57] += _;
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                m[p + 52]++;
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                m[p + 52]--;
                if ((_ = m[p + 57]) !== 0) {
                    m[p + 52] += _;
                    m[p + 57] = 0;
                }
                while (m[p + 52] !== 0) {
                    m[p + 52]--;
                    m[p + 57]++;
                    while (m[p + 51] !== 0) {
                        m[p + 51]--;
                        if ((_ = m[p + 53]) !== 0) {
                            m[p + 51] += _;
                            m[p + 53] = 0;
                        }
                        if ((_ = m[p + 51]) !== 0) {
                            m[p + 53] += _;
                            m[p + 55] += _;
                            m[p + 51] = 0;
                        }
                        m[p + 51]++;
                        p += 9;
                    }
                    while (m[p + 43] !== 0) {
                        p -= 9;
                    }
                    p -= 9;
                }
                while (m[p + 61] !== 0) {
                    p += 9;
                }
                while (m[p + 52] !== 0) {
                    if ((_ = m[p + 53]) !== 0) {
                        m[p + 62] += _;
                        m[p + 53] = 0;
                    }
                    p -= 9;
                }
                if ((_ = m[p + 53]) !== 0) {
                    m[p + 62] += _;
                    m[p + 53] = 0;
                }
                m[p + 52]++;
                p += 9;
            }
            while (m[p + 42] !== 0) {
                if ((_ = m[p + 43]) !== 0) {
                    m[p + 43] = 0;
                }
                m[p + 42]--;
                while (m[p + 46] !== 0) {
                    debugger;
                    m[p + 46]--;
                    m[p + 42]++;
                    if ((_ = m[p + 43]) !== 0) {
                        m[p + 42] += _ * -1;
                        m[p + 37] += _;
                        m[p + 43] = 0;
                    }
                    if ((_ = m[p + 42]) !== 0) {
                        m[p + 43] += _;
                        m[p + 42] = 0;
                    }
                }
                if ((_ = m[p + 43]) !== 0) {
                    m[p + 46] += _;
                    m[p + 43] = 0;
                }
                m[p + 42]++;
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 55]) !== 0) {
                    m[p + 19] += _;
                    m[p + 55] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 54]) !== 0) {
                    m[p + 18] += _;
                    m[p + 54] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            m[p + 51] += 15;
            while (m[p + 51] !== 0) {
                while (m[p + 51] !== 0) {
                    p += 9;
                }
                m[p + 42]--;
                while (m[p + 33] !== 0) {
                    p -= 9;
                }
                m[p + 42]--;
                p -= 9;
            }
            m[p + 51]++;
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 59]) !== 0) {
                    m[p + 52] += _;
                    m[p + 59] = 0;
                }
                if ((_ = m[p + 52]) !== 0) {
                    m[p + 53] += _;
                    m[p + 59] += _;
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 57]) !== 0) {
                    m[p + 57] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            m[p + 46]++;
            if ((_ = m[p + 47]) !== 0) {
                m[p + 46] += _ * -1;
                m[p + 42] += _;
                m[p + 47] = 0;
            }
            while (m[p + 48] !== 0) {
                m[p + 48]--;
                if ((_ = m[p + 42]) !== 0) {
                    m[p + 46] += _ * 2;
                    m[p + 47] += _;
                    m[p + 42] = 0;
                }
                if ((_ = m[p + 47]) !== 0) {
                    m[p + 42] += _;
                    m[p + 47] = 0;
                }
                m[p + 46]--;
                m[p + 47]++;
            }
            if ((_ = m[p + 47]) !== 0) {
                m[p + 48] += _;
                m[p + 47] = 0;
            }
            if ((_ = m[p + 42]) !== 0) {
                m[p + 47] += _;
                m[p + 42] = 0;
            }
            if ((_ = m[p + 48]) !== 0) {
                m[p + 48] = 0;
            }
            m[p + 42]++;
            if ((_ = m[p + 46]) !== 0) {
                m[p + 42] += _ * -1;
                m[p + 46] = 0;
            }
            m[p + 46]++;
            while (m[p + 42] !== 0) {
                m[p + 42]--;
                m[p + 46]--;
                while (m[p + 51] !== 0) {
                    if ((_ = m[p + 53]) !== 0) {
                        m[p + 51] += _ * -1;
                        m[p + 53] = 0;
                    }
                    m[p + 53]++;
                    while (m[p + 51] !== 0) {
                        m[p + 51]--;
                        m[p + 53]--;
                        if ((_ = m[p + 54]) !== 0) {
                            m[p + 51] += _;
                            m[p + 54] = 0;
                        }
                        while (m[p + 51] !== 0) {
                            m[p + 51]--;
                            m[p + 54]++;
                            while (m[p + 42] !== 0) {
                                p -= 9;
                            }
                            if ((_ = m[p + 45]) !== 0) {
                                m[p + 45] = 0;
                            }
                            m[p + 45]++;
                            while (m[p + 51] !== 0) {
                                p += 9;
                            }
                            m[p + 52]++;
                        }
                    }
                    m[p + 51]++;
                    if ((_ = m[p + 54]) !== 0) {
                        m[p + 51] += _ * -1;
                        m[p + 54] = 0;
                    }
                    m[p + 54]++;
                    while (m[p + 51] !== 0) {
                        m[p + 51]--;
                        m[p + 54]--;
                        if ((_ = m[p + 53]) !== 0) {
                            m[p + 51] += _;
                            m[p + 53] = 0;
                        }
                        while (m[p + 51] !== 0) {
                            m[p + 51]--;
                            m[p + 53]++;
                            while (m[p + 42] !== 0) {
                                p -= 9;
                            }
                            if ((_ = m[p + 46]) !== 0) {
                                m[p + 46] = 0;
                            }
                            m[p + 46]++;
                            while (m[p + 51] !== 0) {
                                p += 9;
                            }
                            if ((_ = m[p + 52]) !== 0) {
                                m[p + 52] = 0;
                            }
                            m[p + 52]++;
                        }
                    }
                    m[p + 51]++;
                    while (m[p + 52] !== 0) {
                        m[p + 52]--;
                        while (m[p + 51] !== 0) {
                            p += 9;
                        }
                        p -= 9;
                    }
                    p += 9;
                }
                while (m[p + 42] !== 0) {
                    p -= 9;
                }
                if ((_ = m[p + 46]) !== 0) {
                    m[p + 42] += _;
                    m[p + 46] = 0;
                }
                while (m[p + 42] !== 0) {
                    m[p + 42]--;
                    m[p + 46]++;
                    while (m[p + 51] !== 0) {
                        m[p + 52]++;
                        if ((_ = m[p + 54]) !== 0) {
                            m[p + 52] += _ * -1;
                            m[p + 54] = 0;
                        }
                        if ((_ = m[p + 52]) !== 0) {
                            m[p + 54] += _;
                            m[p + 52] = 0;
                        }
                        p += 9;
                    }
                    m[p + 43]++;
                    while (m[p + 42] !== 0) {
                        while (m[p + 43] !== 0) {
                            m[p + 43]--;
                            m[p + 48]++;
                            while (m[p + 44] !== 0) {
                                m[p + 44]--;
                                m[p + 48]--;
                                m[p + 34]++;
                                if ((_ = m[p + 45]) !== 0) {
                                    m[p + 48] += _;
                                    m[p + 45] = 0;
                                }
                            }
                            if ((_ = m[p + 45]) !== 0) {
                                m[p + 48] += _ * -1;
                                m[p + 34] += _;
                                m[p + 45] = 0;
                            }
                        }
                        while (m[p + 44] !== 0) {
                            m[p + 44]--;
                            m[p + 48]++;
                            if ((_ = m[p + 45]) !== 0) {
                                m[p + 48] += _ * -1;
                                m[p + 34] += _;
                                m[p + 45] = 0;
                            }
                        }
                        if ((_ = m[p + 45]) !== 0) {
                            m[p + 48] += _;
                            m[p + 45] = 0;
                        }
                        p -= 9;
                    }
                    if ((_ = m[p + 46]) !== 0) {
                        m[p + 46] = 0;
                    }
                }
                if ((_ = m[p + 45]) !== 0) {
                    m[p + 42] += _;
                    m[p + 45] = 0;
                }
                while (m[p + 42] !== 0) {
                    m[p + 42]--;
                    m[p + 45]++;
                    while (m[p + 51] !== 0) {
                        m[p + 52]++;
                        if ((_ = m[p + 53]) !== 0) {
                            m[p + 52] += _ * -1;
                            m[p + 53] = 0;
                        }
                        if ((_ = m[p + 52]) !== 0) {
                            m[p + 53] += _;
                            m[p + 52] = 0;
                        }
                        p += 9;
                    }
                    m[p + 43]++;
                    while (m[p + 42] !== 0) {
                        while (m[p + 43] !== 0) {
                            m[p + 43]--;
                            m[p + 48]++;
                            while (m[p + 45] !== 0) {
                                m[p + 45]--;
                                m[p + 48]--;
                                m[p + 34]++;
                                if ((_ = m[p + 44]) !== 0) {
                                    m[p + 48] += _;
                                    m[p + 44] = 0;
                                }
                            }
                            if ((_ = m[p + 44]) !== 0) {
                                m[p + 48] += _ * -1;
                                m[p + 34] += _;
                                m[p + 44] = 0;
                            }
                        }
                        while (m[p + 45] !== 0) {
                            m[p + 45]--;
                            m[p + 48]++;
                            if ((_ = m[p + 44]) !== 0) {
                                m[p + 48] += _ * -1;
                                m[p + 34] += _;
                                m[p + 44] = 0;
                            }
                        }
                        if ((_ = m[p + 44]) !== 0) {
                            m[p + 48] += _;
                            m[p + 44] = 0;
                        }
                        p -= 9;
                    }
                    m[p + 48]++;
                }
            }
            if ((_ = m[p + 46]) !== 0) {
                m[p + 42] += _;
                m[p + 46] = 0;
            }
            while (m[p + 42] !== 0) {
                m[p + 42]--;
                m[p + 46]++;
                while (m[p + 51] !== 0) {
                    p += 9;
                }
                while (m[p + 42] !== 0) {
                    while (m[p + 43] !== 0) {
                        m[p + 43]--;
                        m[p + 48]++;
                        while (m[p + 44] !== 0) {
                            m[p + 44]--;
                            m[p + 48]--;
                            m[p + 34]++;
                            if ((_ = m[p + 45]) !== 0) {
                                m[p + 48] += _;
                                m[p + 45] = 0;
                            }
                        }
                        if ((_ = m[p + 45]) !== 0) {
                            m[p + 48] += _ * -1;
                            m[p + 34] += _;
                            m[p + 45] = 0;
                        }
                    }
                    while (m[p + 44] !== 0) {
                        m[p + 44]--;
                        m[p + 48]++;
                        if ((_ = m[p + 45]) !== 0) {
                            m[p + 48] += _ * -1;
                            m[p + 34] += _;
                            m[p + 45] = 0;
                        }
                    }
                    if ((_ = m[p + 45]) !== 0) {
                        m[p + 48] += _;
                        m[p + 45] = 0;
                    }
                    p -= 9;
                }
            }
            if ((_ = m[p + 43]) !== 0) {
                m[p + 43] = 0;
            }
            if ((_ = m[p + 45]) !== 0) {
                m[p + 45] = 0;
            }
            if ((_ = m[p + 46]) !== 0) {
                m[p + 46] = 0;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 53]) !== 0) {
                    m[p + 53] = 0;
                }
                if ((_ = m[p + 54]) !== 0) {
                    m[p + 54] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 56]) !== 0) {
                    m[p + 52] += _;
                    m[p + 56] = 0;
                }
                if ((_ = m[p + 52]) !== 0) {
                    m[p + 53] += _;
                    m[p + 56] += _;
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            m[p + 51] += 15;
            while (m[p + 51] !== 0) {
                while (m[p + 51] !== 0) {
                    p += 9;
                }
                m[p + 51]++;
                if ((_ = m[p + 52]) !== 0) {
                    m[p + 52] = 0;
                }
                if ((_ = m[p + 53]) !== 0) {
                    m[p + 53] = 0;
                }
                if ((_ = m[p + 54]) !== 0) {
                    m[p + 54] = 0;
                }
                if ((_ = m[p + 55]) !== 0) {
                    m[p + 55] = 0;
                }
                if ((_ = m[p + 56]) !== 0) {
                    m[p + 56] = 0;
                }
                if ((_ = m[p + 57]) !== 0) {
                    m[p + 57] = 0;
                }
                if ((_ = m[p + 58]) !== 0) {
                    m[p + 58] = 0;
                }
                if ((_ = m[p + 59]) !== 0) {
                    m[p + 59] = 0;
                }
                if ((_ = m[p + 60]) !== 0) {
                    m[p + 60] = 0;
                }
                while (m[p + 51] !== 0) {
                    p -= 9;
                }
                m[p + 60]--;
                p += 9;
            }
            m[p + 51]++;
            while (m[p + 51] !== 0) {
                m[p + 52]++;
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                m[p + 52]--;
                if ((_ = m[p + 56]) !== 0) {
                    m[p + 52] += _;
                    m[p + 56] = 0;
                }
                while (m[p + 52] !== 0) {
                    m[p + 52]--;
                    m[p + 56]++;
                    while (m[p + 51] !== 0) {
                        m[p + 51]--;
                        if ((_ = m[p + 53]) !== 0) {
                            m[p + 51] += _;
                            m[p + 53] = 0;
                        }
                        if ((_ = m[p + 51]) !== 0) {
                            m[p + 53] += _;
                            m[p + 54] += _;
                            m[p + 51] = 0;
                        }
                        m[p + 51]++;
                        p += 9;
                    }
                    while (m[p + 43] !== 0) {
                        p -= 9;
                    }
                    p -= 9;
                }
                while (m[p + 61] !== 0) {
                    p += 9;
                }
                while (m[p + 52] !== 0) {
                    if ((_ = m[p + 53]) !== 0) {
                        m[p + 62] += _;
                        m[p + 53] = 0;
                    }
                    p -= 9;
                }
                if ((_ = m[p + 53]) !== 0) {
                    m[p + 62] += _;
                    m[p + 53] = 0;
                }
                m[p + 52]++;
                p += 9;
            }
            while (m[p + 42] !== 0) {
                if ((_ = m[p + 43]) !== 0) {
                    m[p + 43] = 0;
                }
                m[p + 42]--;
                while (m[p + 45] !== 0) {
                    m[p + 45]--;
                    m[p + 42]++;
                    if ((_ = m[p + 43]) !== 0) {
                        m[p + 42] += _ * -1;
                        m[p + 36] += _;
                        m[p + 43] = 0;
                    }
                    if ((_ = m[p + 42]) !== 0) {
                        m[p + 43] += _;
                        m[p + 42] = 0;
                    }
                }
                if ((_ = m[p + 43]) !== 0) {
                    m[p + 45] += _;
                    m[p + 43] = 0;
                }
                m[p + 42]++;
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 54]) !== 0) {
                    m[p + 18] += _;
                    m[p + 54] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            if ((_ = m[p + 47]) !== 0) {
                m[p + 47] = 0;
            }
            m[p + 51] += 15;
            while (m[p + 51] !== 0) {
                while (m[p + 51] !== 0) {
                    p += 9;
                }
                m[p + 42]--;
                while (m[p + 33] !== 0) {
                    p -= 9;
                }
                m[p + 42]--;
                p -= 9;
            }
            m[p + 51]++;
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 54]) !== 0) {
                    m[p + 51] += _ * -1;
                    m[p + 54] = 0;
                }
                m[p + 54]++;
                while (m[p + 51] !== 0) {
                    m[p + 51]--;
                    m[p + 54]--;
                    if ((_ = m[p + 55]) !== 0) {
                        m[p + 51] += _;
                        m[p + 55] = 0;
                    }
                    while (m[p + 51] !== 0) {
                        m[p + 51]--;
                        m[p + 55]++;
                        while (m[p + 42] !== 0) {
                            p -= 9;
                        }
                        if ((_ = m[p + 46]) !== 0) {
                            m[p + 46] = 0;
                        }
                        m[p + 46]++;
                        while (m[p + 51] !== 0) {
                            p += 9;
                        }
                        m[p + 52]++;
                    }
                }
                m[p + 51]++;
                if ((_ = m[p + 55]) !== 0) {
                    m[p + 51] += _ * -1;
                    m[p + 55] = 0;
                }
                m[p + 55]++;
                while (m[p + 51] !== 0) {
                    m[p + 51]--;
                    m[p + 55]--;
                    if ((_ = m[p + 54]) !== 0) {
                        m[p + 51] += _;
                        m[p + 54] = 0;
                    }
                    while (m[p + 51] !== 0) {
                        m[p + 51]--;
                        m[p + 54]++;
                        while (m[p + 42] !== 0) {
                            p -= 9;
                        }
                        if ((_ = m[p + 45]) !== 0) {
                            m[p + 45] = 0;
                        }
                        m[p + 45]++;
                        while (m[p + 51] !== 0) {
                            p += 9;
                        }
                        if ((_ = m[p + 52]) !== 0) {
                            m[p + 52] = 0;
                        }
                        m[p + 52]++;
                    }
                }
                m[p + 51]++;
                while (m[p + 52] !== 0) {
                    m[p + 52]--;
                    while (m[p + 51] !== 0) {
                        p += 9;
                    }
                    p -= 9;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            if ((_ = m[p + 45]) !== 0) {
                m[p + 42] += _;
                m[p + 45] = 0;
            }
            while (m[p + 42] !== 0) {
                m[p + 42]--;
                m[p + 45]++;
                while (m[p + 51] !== 0) {
                    m[p + 52]++;
                    if ((_ = m[p + 55]) !== 0) {
                        m[p + 52] += _ * -1;
                        m[p + 55] = 0;
                    }
                    if ((_ = m[p + 52]) !== 0) {
                        m[p + 55] += _;
                        m[p + 52] = 0;
                    }
                    p += 9;
                }
                m[p + 43]++;
                while (m[p + 42] !== 0) {
                    while (m[p + 43] !== 0) {
                        m[p + 43]--;
                        m[p + 44]++;
                        while (m[p + 45] !== 0) {
                            m[p + 45]--;
                            m[p + 44]--;
                            m[p + 34]++;
                            if ((_ = m[p + 46]) !== 0) {
                                m[p + 44] += _;
                                m[p + 46] = 0;
                            }
                        }
                        if ((_ = m[p + 46]) !== 0) {
                            m[p + 44] += _ * -1;
                            m[p + 34] += _;
                            m[p + 46] = 0;
                        }
                    }
                    while (m[p + 45] !== 0) {
                        m[p + 45]--;
                        m[p + 44]++;
                        if ((_ = m[p + 46]) !== 0) {
                            m[p + 44] += _ * -1;
                            m[p + 34] += _;
                            m[p + 46] = 0;
                        }
                    }
                    if ((_ = m[p + 46]) !== 0) {
                        m[p + 44] += _;
                        m[p + 46] = 0;
                    }
                    p -= 9;
                }
            }
            if ((_ = m[p + 46]) !== 0) {
                m[p + 42] += _;
                m[p + 46] = 0;
            }
            while (m[p + 42] !== 0) {
                m[p + 42]--;
                m[p + 46]++;
                while (m[p + 51] !== 0) {
                    m[p + 52]++;
                    if ((_ = m[p + 54]) !== 0) {
                        m[p + 52] += _ * -1;
                        m[p + 54] = 0;
                    }
                    if ((_ = m[p + 52]) !== 0) {
                        m[p + 54] += _;
                        m[p + 52] = 0;
                    }
                    p += 9;
                }
                m[p + 43]++;
                while (m[p + 42] !== 0) {
                    while (m[p + 43] !== 0) {
                        m[p + 43]--;
                        m[p + 44]++;
                        while (m[p + 46] !== 0) {
                            m[p + 46]--;
                            m[p + 44]--;
                            m[p + 34]++;
                            if ((_ = m[p + 45]) !== 0) {
                                m[p + 44] += _;
                                m[p + 45] = 0;
                            }
                        }
                        if ((_ = m[p + 45]) !== 0) {
                            m[p + 44] += _ * -1;
                            m[p + 34] += _;
                            m[p + 45] = 0;
                        }
                    }
                    while (m[p + 46] !== 0) {
                        m[p + 46]--;
                        m[p + 44]++;
                        if ((_ = m[p + 45]) !== 0) {
                            m[p + 44] += _ * -1;
                            m[p + 34] += _;
                            m[p + 45] = 0;
                        }
                    }
                    if ((_ = m[p + 45]) !== 0) {
                        m[p + 44] += _;
                        m[p + 45] = 0;
                    }
                    p -= 9;
                }
                m[p + 47]++;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 54]) !== 0) {
                    m[p + 54] = 0;
                }
                if ((_ = m[p + 55]) !== 0) {
                    m[p + 55] = 0;
                }
                if ((_ = m[p + 56]) !== 0) {
                    m[p + 56] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            if ((_ = m[p + 45]) !== 0) {
                m[p + 45] = 0;
            }
            if ((_ = m[p + 46]) !== 0) {
                m[p + 46] = 0;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 58]) !== 0) {
                    m[p + 52] += _;
                    m[p + 58] = 0;
                }
                if ((_ = m[p + 52]) !== 0) {
                    m[p + 54] += _;
                    m[p + 58] += _;
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            m[p + 46]++;
            if ((_ = m[p + 47]) !== 0) {
                m[p + 46] += _ * -1;
                m[p + 42] += _;
                m[p + 47] = 0;
            }
            while (m[p + 49] !== 0) {
                m[p + 49]--;
                if ((_ = m[p + 42]) !== 0) {
                    m[p + 46] += _ * 2;
                    m[p + 47] += _;
                    m[p + 42] = 0;
                }
                if ((_ = m[p + 47]) !== 0) {
                    m[p + 42] += _;
                    m[p + 47] = 0;
                }
                m[p + 46]--;
                m[p + 47]++;
            }
            if ((_ = m[p + 47]) !== 0) {
                m[p + 49] += _;
                m[p + 47] = 0;
            }
            if ((_ = m[p + 42]) !== 0) {
                m[p + 47] += _;
                m[p + 42] = 0;
            }
            m[p + 42]++;
            if ((_ = m[p + 46]) !== 0) {
                m[p + 42] += _ * -1;
                m[p + 46] = 0;
            }
            m[p + 46]++;
            while (m[p + 42] !== 0) {
                m[p + 42]--;
                m[p + 46]--;
                while (m[p + 51] !== 0) {
                    if ((_ = m[p + 54]) !== 0) {
                        m[p + 51] += _ * -1;
                        m[p + 54] = 0;
                    }
                    m[p + 54]++;
                    while (m[p + 51] !== 0) {
                        m[p + 51]--;
                        m[p + 54]--;
                        if ((_ = m[p + 53]) !== 0) {
                            m[p + 51] += _;
                            m[p + 53] = 0;
                        }
                        while (m[p + 51] !== 0) {
                            m[p + 51]--;
                            m[p + 53]++;
                            while (m[p + 42] !== 0) {
                                p -= 9;
                            }
                            if ((_ = m[p + 46]) !== 0) {
                                m[p + 46] = 0;
                            }
                            m[p + 46]++;
                            while (m[p + 51] !== 0) {
                                p += 9;
                            }
                            m[p + 52]++;
                        }
                    }
                    m[p + 51]++;
                    if ((_ = m[p + 53]) !== 0) {
                        m[p + 51] += _ * -1;
                        m[p + 53] = 0;
                    }
                    m[p + 53]++;
                    while (m[p + 51] !== 0) {
                        m[p + 51]--;
                        m[p + 53]--;
                        if ((_ = m[p + 54]) !== 0) {
                            m[p + 51] += _;
                            m[p + 54] = 0;
                        }
                        while (m[p + 51] !== 0) {
                            m[p + 51]--;
                            m[p + 54]++;
                            while (m[p + 42] !== 0) {
                                p -= 9;
                            }
                            if ((_ = m[p + 45]) !== 0) {
                                m[p + 45] = 0;
                            }
                            m[p + 45]++;
                            while (m[p + 51] !== 0) {
                                p += 9;
                            }
                            if ((_ = m[p + 52]) !== 0) {
                                m[p + 52] = 0;
                            }
                            m[p + 52]++;
                        }
                    }
                    m[p + 51]++;
                    while (m[p + 52] !== 0) {
                        m[p + 52]--;
                        while (m[p + 51] !== 0) {
                            p += 9;
                        }
                        p -= 9;
                    }
                    p += 9;
                }
                while (m[p + 42] !== 0) {
                    p -= 9;
                }
                if ((_ = m[p + 45]) !== 0) {
                    m[p + 42] += _;
                    m[p + 45] = 0;
                }
                while (m[p + 42] !== 0) {
                    m[p + 42]--;
                    m[p + 45]++;
                    while (m[p + 51] !== 0) {
                        m[p + 52]++;
                        if ((_ = m[p + 53]) !== 0) {
                            m[p + 52] += _ * -1;
                            m[p + 53] = 0;
                        }
                        if ((_ = m[p + 52]) !== 0) {
                            m[p + 53] += _;
                            m[p + 52] = 0;
                        }
                        p += 9;
                    }
                    m[p + 43]++;
                    while (m[p + 42] !== 0) {
                        while (m[p + 43] !== 0) {
                            m[p + 43]--;
                            m[p + 47]++;
                            while (m[p + 45] !== 0) {
                                m[p + 45]--;
                                m[p + 47]--;
                                m[p + 34]++;
                                if ((_ = m[p + 44]) !== 0) {
                                    m[p + 47] += _;
                                    m[p + 44] = 0;
                                }
                            }
                            if ((_ = m[p + 44]) !== 0) {
                                m[p + 47] += _ * -1;
                                m[p + 34] += _;
                                m[p + 44] = 0;
                            }
                        }
                        while (m[p + 45] !== 0) {
                            m[p + 45]--;
                            m[p + 47]++;
                            if ((_ = m[p + 44]) !== 0) {
                                m[p + 47] += _ * -1;
                                m[p + 34] += _;
                                m[p + 44] = 0;
                            }
                        }
                        if ((_ = m[p + 44]) !== 0) {
                            m[p + 47] += _;
                            m[p + 44] = 0;
                        }
                        p -= 9;
                    }
                    if ((_ = m[p + 47]) !== 0) {
                        m[p + 47] = 0;
                    }
                    if ((_ = m[p + 49]) !== 0) {
                        m[p + 42] += _;
                        m[p + 49] = 0;
                    }
                    if ((_ = m[p + 42]) !== 0) {
                        m[p + 47] += _;
                        m[p + 49] += _;
                        m[p + 42] = 0;
                    }
                }
                if ((_ = m[p + 46]) !== 0) {
                    m[p + 42] += _;
                    m[p + 46] = 0;
                }
                while (m[p + 42] !== 0) {
                    m[p + 42]--;
                    m[p + 46]++;
                    while (m[p + 51] !== 0) {
                        m[p + 52]++;
                        if ((_ = m[p + 54]) !== 0) {
                            m[p + 52] += _ * -1;
                            m[p + 54] = 0;
                        }
                        if ((_ = m[p + 52]) !== 0) {
                            m[p + 54] += _;
                            m[p + 52] = 0;
                        }
                        p += 9;
                    }
                    m[p + 43]++;
                    while (m[p + 42] !== 0) {
                        while (m[p + 43] !== 0) {
                            m[p + 43]--;
                            m[p + 47]++;
                            while (m[p + 44] !== 0) {
                                m[p + 44]--;
                                m[p + 47]--;
                                m[p + 34]++;
                                if ((_ = m[p + 45]) !== 0) {
                                    m[p + 47] += _;
                                    m[p + 45] = 0;
                                }
                            }
                            if ((_ = m[p + 45]) !== 0) {
                                m[p + 47] += _ * -1;
                                m[p + 34] += _;
                                m[p + 45] = 0;
                            }
                        }
                        while (m[p + 44] !== 0) {
                            m[p + 44]--;
                            m[p + 47]++;
                            if ((_ = m[p + 45]) !== 0) {
                                m[p + 47] += _ * -1;
                                m[p + 34] += _;
                                m[p + 45] = 0;
                            }
                        }
                        if ((_ = m[p + 45]) !== 0) {
                            m[p + 47] += _;
                            m[p + 45] = 0;
                        }
                        p -= 9;
                    }
                }
                if ((_ = m[p + 46]) !== 0) {
                    m[p + 46] = 0;
                }
            }
            if ((_ = m[p + 46]) !== 0) {
                m[p + 42] += _;
                m[p + 46] = 0;
            }
            while (m[p + 42] !== 0) {
                m[p + 42]--;
                m[p + 46]++;
                if ((_ = m[p + 47]) !== 0) {
                    m[p + 47] = 0;
                }
                if ((_ = m[p + 49]) !== 0) {
                    m[p + 42] += _;
                    m[p + 49] = 0;
                }
                if ((_ = m[p + 42]) !== 0) {
                    m[p + 47] += _;
                    m[p + 49] += _;
                    m[p + 42] = 0;
                }
                while (m[p + 51] !== 0) {
                    p += 9;
                }
                while (m[p + 42] !== 0) {
                    while (m[p + 43] !== 0) {
                        m[p + 43]--;
                        m[p + 47]++;
                        while (m[p + 44] !== 0) {
                            m[p + 44]--;
                            m[p + 47]--;
                            m[p + 34]++;
                            if ((_ = m[p + 45]) !== 0) {
                                m[p + 47] += _;
                                m[p + 45] = 0;
                            }
                        }
                        if ((_ = m[p + 45]) !== 0) {
                            m[p + 47] += _ * -1;
                            m[p + 34] += _;
                            m[p + 45] = 0;
                        }
                    }
                    while (m[p + 44] !== 0) {
                        m[p + 44]--;
                        m[p + 47]++;
                        if ((_ = m[p + 45]) !== 0) {
                            m[p + 47] += _ * -1;
                            m[p + 34] += _;
                            m[p + 45] = 0;
                        }
                    }
                    if ((_ = m[p + 45]) !== 0) {
                        m[p + 47] += _;
                        m[p + 45] = 0;
                    }
                    p -= 9;
                }
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 53]) !== 0) {
                    m[p + 53] = 0;
                }
                if ((_ = m[p + 54]) !== 0) {
                    m[p + 54] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            if ((_ = m[p + 45]) !== 0) {
                m[p + 45] = 0;
            }
            if ((_ = m[p + 46]) !== 0) {
                m[p + 46] = 0;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 56]) !== 0) {
                    m[p + 52] += _;
                    m[p + 56] = 0;
                }
                if ((_ = m[p + 52]) !== 0) {
                    m[p + 53] += _;
                    m[p + 56] += _;
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 57]) !== 0) {
                    m[p + 52] += _;
                    m[p + 57] = 0;
                }
                if ((_ = m[p + 52]) !== 0) {
                    m[p + 54] += _;
                    m[p + 57] += _;
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            m[p + 51] += 15;
            while (m[p + 51] !== 0) {
                while (m[p + 51] !== 0) {
                    p += 9;
                }
                m[p + 51]++;
                if ((_ = m[p + 52]) !== 0) {
                    m[p + 52] = 0;
                }
                if ((_ = m[p + 53]) !== 0) {
                    m[p + 53] = 0;
                }
                if ((_ = m[p + 54]) !== 0) {
                    m[p + 54] = 0;
                }
                if ((_ = m[p + 55]) !== 0) {
                    m[p + 55] = 0;
                }
                if ((_ = m[p + 56]) !== 0) {
                    m[p + 56] = 0;
                }
                if ((_ = m[p + 57]) !== 0) {
                    m[p + 57] = 0;
                }
                if ((_ = m[p + 58]) !== 0) {
                    m[p + 58] = 0;
                }
                if ((_ = m[p + 59]) !== 0) {
                    m[p + 59] = 0;
                }
                if ((_ = m[p + 60]) !== 0) {
                    m[p + 60] = 0;
                }
                while (m[p + 51] !== 0) {
                    p -= 9;
                }
                m[p + 60]--;
                p += 9;
            }
            m[p + 51]++;
            while (m[p + 51] !== 0) {
                m[p + 52]++;
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                m[p + 52]--;
                if ((_ = m[p + 56]) !== 0) {
                    m[p + 52] += _;
                    m[p + 56] = 0;
                }
                while (m[p + 52] !== 0) {
                    m[p + 52]--;
                    m[p + 56]++;
                    while (m[p + 51] !== 0) {
                        m[p + 51]--;
                        if ((_ = m[p + 53]) !== 0) {
                            m[p + 51] += _;
                            m[p + 53] = 0;
                        }
                        if ((_ = m[p + 51]) !== 0) {
                            m[p + 53] += _;
                            m[p + 55] += _;
                            m[p + 51] = 0;
                        }
                        m[p + 51]++;
                        p += 9;
                    }
                    while (m[p + 43] !== 0) {
                        p -= 9;
                    }
                    p -= 9;
                }
                while (m[p + 61] !== 0) {
                    p += 9;
                }
                while (m[p + 52] !== 0) {
                    if ((_ = m[p + 53]) !== 0) {
                        m[p + 62] += _;
                        m[p + 53] = 0;
                    }
                    p -= 9;
                }
                if ((_ = m[p + 53]) !== 0) {
                    m[p + 62] += _;
                    m[p + 53] = 0;
                }
                m[p + 52]++;
                p += 9;
            }
            while (m[p + 42] !== 0) {
                if ((_ = m[p + 43]) !== 0) {
                    m[p + 43] = 0;
                }
                m[p + 42]--;
                while (m[p + 46] !== 0) {
                    m[p + 46]--;
                    m[p + 42]++;
                    if ((_ = m[p + 43]) !== 0) {
                        m[p + 42] += _ * -1;
                        m[p + 37] += _;
                        m[p + 43] = 0;
                    }
                    if ((_ = m[p + 42]) !== 0) {
                        m[p + 43] += _;
                        m[p + 42] = 0;
                    }
                }
                if ((_ = m[p + 43]) !== 0) {
                    m[p + 46] += _;
                    m[p + 43] = 0;
                }
                m[p + 42]++;
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                m[p + 52]++;
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                m[p + 52]--;
                if ((_ = m[p + 57]) !== 0) {
                    m[p + 52] += _;
                    m[p + 57] = 0;
                }
                while (m[p + 52] !== 0) {
                    m[p + 52]--;
                    m[p + 57]++;
                    while (m[p + 51] !== 0) {
                        m[p + 51]--;
                        if ((_ = m[p + 54]) !== 0) {
                            m[p + 51] += _;
                            m[p + 54] = 0;
                        }
                        if ((_ = m[p + 51]) !== 0) {
                            m[p + 54] += _;
                            m[p + 55] += _;
                            m[p + 51] = 0;
                        }
                        m[p + 51]++;
                        p += 9;
                    }
                    while (m[p + 43] !== 0) {
                        p -= 9;
                    }
                    p -= 9;
                }
                while (m[p + 61] !== 0) {
                    p += 9;
                }
                while (m[p + 52] !== 0) {
                    if ((_ = m[p + 54]) !== 0) {
                        m[p + 63] += _;
                        m[p + 54] = 0;
                    }
                    p -= 9;
                }
                if ((_ = m[p + 54]) !== 0) {
                    m[p + 63] += _;
                    m[p + 54] = 0;
                }
                m[p + 52]++;
                p += 9;
            }
            while (m[p + 42] !== 0) {
                if ((_ = m[p + 43]) !== 0) {
                    m[p + 43] = 0;
                }
                m[p + 42]--;
                while (m[p + 46] !== 0) {
                    m[p + 46]--;
                    m[p + 42]++;
                    if ((_ = m[p + 43]) !== 0) {
                        m[p + 42] += _ * -1;
                        m[p + 37] += _;
                        m[p + 43] = 0;
                    }
                    if ((_ = m[p + 42]) !== 0) {
                        m[p + 43] += _;
                        m[p + 42] = 0;
                    }
                }
                if ((_ = m[p + 43]) !== 0) {
                    m[p + 46] += _;
                    m[p + 43] = 0;
                }
                m[p + 42]++;
                p -= 9;
            }
            while (m[p + 51] !== 0) {
                if ((_ = m[p + 55]) !== 0) {
                    m[p + 19] += _;
                    m[p + 55] = 0;
                }
                p += 9;
            }
            while (m[p + 42] !== 0) {
                p -= 9;
            }
            m[p + 51] += 15;
            while (m[p + 51] !== 0) {
                while (m[p + 51] !== 0) {
                    p += 9;
                }
                m[p + 42]--;
                while (m[p + 33] !== 0) {
                    p -= 9;
                }
                m[p + 42]--;
                p -= 9;
            }
            m[p + 51]++;
            m[p + 72]++;
            while (m[p + 69] !== 0) {
                p -= 9;
            }
            while (m[p + 78] !== 0) {
                if ((_ = m[p + 81]) !== 0) {
                    m[p + 78] += _ * -1;
                    m[p + 81] = 0;
                }
                m[p + 81]++;
                while (m[p + 78] !== 0) {
                    m[p + 78]--;
                    m[p + 81]--;
                    if ((_ = m[p + 82]) !== 0) {
                        m[p + 78] += _;
                        m[p + 82] = 0;
                    }
                    while (m[p + 78] !== 0) {
                        m[p + 78]--;
                        m[p + 82]++;
                        while (m[p + 69] !== 0) {
                            p -= 9;
                        }
                        if ((_ = m[p + 73]) !== 0) {
                            m[p + 73] = 0;
                        }
                        m[p + 73]++;
                        while (m[p + 78] !== 0) {
                            p += 9;
                        }
                        m[p + 79]++;
                    }
                }
                m[p + 78]++;
                if ((_ = m[p + 82]) !== 0) {
                    m[p + 78] += _ * -1;
                    m[p + 82] = 0;
                }
                m[p + 82]++;
                while (m[p + 78] !== 0) {
                    m[p + 78]--;
                    m[p + 82]--;
                    if ((_ = m[p + 81]) !== 0) {
                        m[p + 78] += _;
                        m[p + 81] = 0;
                    }
                    while (m[p + 78] !== 0) {
                        m[p + 78]--;
                        m[p + 81]++;
                        while (m[p + 69] !== 0) {
                            p -= 9;
                        }
                        if ((_ = m[p + 72]) !== 0) {
                            m[p + 72] = 0;
                        }
                        m[p + 72]++;
                        while (m[p + 78] !== 0) {
                            p += 9;
                        }
                        if ((_ = m[p + 79]) !== 0) {
                            m[p + 79] = 0;
                        }
                        m[p + 79]++;
                    }
                }
                m[p + 78]++;
                while (m[p + 79] !== 0) {
                    m[p + 79]--;
                    while (m[p + 78] !== 0) {
                        p += 9;
                    }
                    p -= 9;
                }
                p += 9;
            }
            while (m[p + 69] !== 0) {
                p -= 9;
            }
            m[p + 71]--;
            if ((_ = m[p + 73]) !== 0) {
                m[p + 69] += _;
                m[p + 73] = 0;
            }
            while (m[p + 69] !== 0) {
                m[p + 69]--;
                m[p + 73]++;
                if ((_ = m[p + 71]) !== 0) {
                    m[p + 71] = 0;
                }
            }
            p += 26;
        }
        m[p + 43]++;
        if ((_ = m[p + 47]) !== 0) {
            m[p + 43] += _ * -1;
            m[p + 47] = 0;
        }
        m[p + 47]++;
        while (m[p + 43] !== 0) {
            m[p + 43]--;
            m[p + 47]--;
            q(m[p + 41]);
        }
        while (m[p + 47] !== 0) {
            m[p + 47]--;
            q(m[p + 40]);
        }
        if ((_ = m[p + 44]) !== 0) {
            m[p + 44] = 0;
        }
        if ((_ = m[p + 45]) !== 0) {
            m[p + 45] = 0;
        }
        if ((_ = m[p + 46]) !== 0) {
            m[p + 46] = 0;
        }
        if ((_ = m[p + 47]) !== 0) {
            m[p + 47] = 0;
        }
        if ((_ = m[p + 48]) !== 0) {
            m[p + 48] = 0;
        }
        if ((_ = m[p + 49]) !== 0) {
            m[p + 49] = 0;
        }
        while (m[p + 52] !== 0) {
            if ((_ = m[p + 53]) !== 0) {
                m[p + 53] = 0;
            }
            if ((_ = m[p + 54]) !== 0) {
                m[p + 54] = 0;
            }
            if ((_ = m[p + 55]) !== 0) {
                m[p + 55] = 0;
            }
            if ((_ = m[p + 56]) !== 0) {
                m[p + 56] = 0;
            }
            if ((_ = m[p + 57]) !== 0) {
                m[p + 57] = 0;
            }
            if ((_ = m[p + 58]) !== 0) {
                m[p + 58] = 0;
            }
            p += 9;
        }
        while (m[p + 43] !== 0) {
            p -= 9;
        }
        while (m[p + 52] !== 0) {
            if ((_ = m[p + 57]) !== 0) {
                m[p + 57] = 0;
            }
            p += 9;
        }
        while (m[p + 43] !== 0) {
            p -= 9;
        }
        m[p + 44] += 11;
        while (m[p + 44] !== 0) {
            m[p + 44]--;
            if ((_ = m[p + 44]) !== 0) {
                m[p + 53] += _;
                m[p + 44] = 0;
            }
            p += 9;
        }
        m[p + 48]++;
        m[p + 57]++;
        while (m[p + 43] !== 0) {
            p -= 9;
        }
        if ((_ = m[p + 50]) !== 0) {
            m[p + 43] += _;
            m[p + 50] = 0;
        }
        while (m[p + 43] !== 0) {
            m[p + 43]--;
            m[p + 50]++;
            if ((_ = m[p + 50]) !== 0) {
                m[p + 50] = 0;
            }
            while (m[p + 52] !== 0) {
                p += 9;
            }
            while (m[p + 43] !== 0) {
                if ((_ = m[p + 50]) !== 0) {
                    m[p + 44] += _;
                    m[p + 50] = 0;
                }
                while (m[p + 44] !== 0) {
                    m[p + 44]--;
                    m[p + 50]++;
                    while (m[p + 43] !== 0) {
                        p -= 9;
                    }
                    if ((_ = m[p + 50]) !== 0) {
                        m[p + 50] = 0;
                    }
                    m[p + 50]++;
                    p += 9;
                }
                p -= 9;
            }
        }
        if ((_ = m[p + 50]) !== 0) {
            m[p + 43] += _;
            m[p + 50] = 0;
        }
        while (m[p + 43] !== 0) {
            m[p + 43]--;
            m[p + 50]++;
            while (m[p + 52] !== 0) {
                m[p + 53]++;
                if ((_ = m[p + 57]) !== 0) {
                    m[p + 53] += _ * -1;
                    m[p + 57] = 0;
                }
                if ((_ = m[p + 53]) !== 0) {
                    m[p + 57] += _;
                    m[p + 53] = 0;
                }
                p += 9;
            }
            m[p + 50]++;
            while (m[p + 43] !== 0) {
                if ((_ = m[p + 48]) !== 0) {
                    m[p + 50] += _;
                    m[p + 48] = 0;
                }
                p -= 9;
            }
            while (m[p + 52] !== 0) {
                p += 9;
            }
            while (m[p + 43] !== 0) {
                if ((_ = m[p + 44]) !== 0) {
                    m[p + 44] = 0;
                }
                m[p + 43]--;
                while (m[p + 50] !== 0) {
                    m[p + 50]--;
                    m[p + 43]++;
                    if ((_ = m[p + 44]) !== 0) {
                        m[p + 43] += _ * -1;
                        m[p + 41] += _;
                        m[p + 44] = 0;
                    }
                    if ((_ = m[p + 43]) !== 0) {
                        m[p + 44] += _;
                        m[p + 43] = 0;
                    }
                }
                if ((_ = m[p + 44]) !== 0) {
                    m[p + 50] += _;
                    m[p + 44] = 0;
                }
                m[p + 43]++;
                p -= 9;
            }
            m[p + 50]--;
            if ((_ = m[p + 46]) !== 0) {
                m[p + 46] = 0;
            }
            m[p + 46]++;
        }
        m[p + 43]++;
        if ((_ = m[p + 50]) !== 0) {
            m[p + 43] += _ * -1;
            m[p + 50] = 0;
        }
        m[p + 50]++;
        while (m[p + 43] !== 0) {
            m[p + 43]--;
            m[p + 50]--;
            while (m[p + 52] !== 0) {
                if ((_ = m[p + 57]) !== 0) {
                    m[p + 59] += _;
                    m[p + 57] = 0;
                }
                p += 9;
            }
            while (m[p + 43] !== 0) {
                if ((_ = m[p + 44]) !== 0) {
                    m[p + 44] = 0;
                }
                m[p + 43]--;
                while (m[p + 50] !== 0) {
                    m[p + 50]--;
                    m[p + 43]++;
                    if ((_ = m[p + 44]) !== 0) {
                        m[p + 43] += _ * -1;
                        m[p + 41] += _;
                        m[p + 44] = 0;
                    }
                    if ((_ = m[p + 43]) !== 0) {
                        m[p + 44] += _;
                        m[p + 43] = 0;
                    }
                }
                if ((_ = m[p + 44]) !== 0) {
                    m[p + 50] += _;
                    m[p + 44] = 0;
                }
                m[p + 43]++;
                p -= 9;
            }
            m[p + 44] += 5;
            while (m[p + 44] !== 0) {
                m[p + 44]--;
                if ((_ = m[p + 44]) !== 0) {
                    m[p + 53] += _;
                    m[p + 44] = 0;
                }
                p += 9;
            }
            m[p + 48]++;
            while (m[p + 43] !== 0) {
                p -= 9;
            }
            while (m[p + 52] !== 0) {
                if ((_ = m[p + 57]) !== 0) {
                    m[p + 52] += _ * -1;
                    m[p + 57] = 0;
                }
                m[p + 57]++;
                while (m[p + 52] !== 0) {
                    m[p + 52]--;
                    m[p + 57]--;
                    if ((_ = m[p + 59]) !== 0) {
                        m[p + 52] += _;
                        m[p + 59] = 0;
                    }
                    while (m[p + 52] !== 0) {
                        m[p + 52]--;
                        m[p + 59]++;
                        while (m[p + 43] !== 0) {
                            p -= 9;
                        }
                        if ((_ = m[p + 47]) !== 0) {
                            m[p + 47] = 0;
                        }
                        m[p + 47]++;
                        while (m[p + 52] !== 0) {
                            p += 9;
                        }
                        m[p + 53]++;
                    }
                }
                m[p + 52]++;
                if ((_ = m[p + 59]) !== 0) {
                    m[p + 52] += _ * -1;
                    m[p + 59] = 0;
                }
                m[p + 59]++;
                while (m[p + 52] !== 0) {
                    m[p + 52]--;
                    m[p + 59]--;
                    if ((_ = m[p + 57]) !== 0) {
                        m[p + 52] += _;
                        m[p + 57] = 0;
                    }
                    while (m[p + 52] !== 0) {
                        m[p + 52]--;
                        m[p + 57]++;
                        while (m[p + 43] !== 0) {
                            p -= 9;
                        }
                        if ((_ = m[p + 46]) !== 0) {
                            m[p + 46] = 0;
                        }
                        m[p + 46]++;
                        while (m[p + 52] !== 0) {
                            p += 9;
                        }
                        if ((_ = m[p + 53]) !== 0) {
                            m[p + 53] = 0;
                        }
                        m[p + 53]++;
                    }
                }
                m[p + 52]++;
                while (m[p + 53] !== 0) {
                    m[p + 53]--;
                    while (m[p + 52] !== 0) {
                        p += 9;
                    }
                    p -= 9;
                }
                p += 9;
            }
            while (m[p + 43] !== 0) {
                p -= 9;
            }
            if ((_ = m[p + 47]) !== 0) {
                m[p + 47] = 0;
            }
            m[p + 44] += 5;
            while (m[p + 44] !== 0) {
                m[p + 44]--;
                if ((_ = m[p + 44]) !== 0) {
                    m[p + 53] += _;
                    m[p + 44] = 0;
                }
                p += 9;
            }
            m[p + 48]--;
            while (m[p + 43] !== 0) {
                p -= 9;
            }
        }
        p += 27;
    }
    q(m[p + 15]);
    while (m[p + 25] !== 0) {
        if ((_ = m[p + 31]) !== 0) {
            m[p + 31] = 0;
        }
        p += 9;
    }
    while (m[p + 16] !== 0) {
        p -= 9;
    }
    m[p + 17] += 10;
    while (m[p + 17] !== 0) {
        m[p + 17]--;
        if ((_ = m[p + 17]) !== 0) {
            m[p + 26] += _;
            m[p + 17] = 0;
        }
        p += 9;
    }
    m[p + 22]++;
    m[p + 31]++;
    while (m[p + 16] !== 0) {
        p -= 9;
    }
    if ((_ = m[p + 24]) !== 0) {
        m[p + 16] += _;
        m[p + 24] = 0;
    }
    while (m[p + 16] !== 0) {
        m[p + 16]--;
        m[p + 24]++;
        if ((_ = m[p + 24]) !== 0) {
            m[p + 24] = 0;
        }
        while (m[p + 25] !== 0) {
            p += 9;
        }
        while (m[p + 16] !== 0) {
            if ((_ = m[p + 24]) !== 0) {
                m[p + 17] += _;
                m[p + 24] = 0;
            }
            while (m[p + 17] !== 0) {
                m[p + 17]--;
                m[p + 24]++;
                while (m[p + 16] !== 0) {
                    p -= 9;
                }
                if ((_ = m[p + 24]) !== 0) {
                    m[p + 24] = 0;
                }
                m[p + 24]++;
                p += 9;
            }
            p -= 9;
        }
    }
    if ((_ = m[p + 24]) !== 0) {
        m[p + 16] += _;
        m[p + 24] = 0;
    }
    while (m[p + 16] !== 0) {
        m[p + 16]--;
        m[p + 24]++;
        while (m[p + 25] !== 0) {
            m[p + 26]++;
            if ((_ = m[p + 31]) !== 0) {
                m[p + 26] += _ * -1;
                m[p + 31] = 0;
            }
            if ((_ = m[p + 26]) !== 0) {
                m[p + 31] += _;
                m[p + 26] = 0;
            }
            p += 9;
        }
        m[p + 24]++;
        while (m[p + 16] !== 0) {
            if ((_ = m[p + 22]) !== 0) {
                m[p + 24] += _;
                m[p + 22] = 0;
            }
            p -= 9;
        }
        while (m[p + 25] !== 0) {
            p += 9;
        }
        while (m[p + 16] !== 0) {
            if ((_ = m[p + 17]) !== 0) {
                m[p + 17] = 0;
            }
            m[p + 16]--;
            while (m[p + 24] !== 0) {
                m[p + 24]--;
                m[p + 16]++;
                if ((_ = m[p + 17]) !== 0) {
                    m[p + 16] += _ * -1;
                    m[p + 15] += _;
                    m[p + 17] = 0;
                }
                if ((_ = m[p + 16]) !== 0) {
                    m[p + 17] += _;
                    m[p + 16] = 0;
                }
            }
            if ((_ = m[p + 17]) !== 0) {
                m[p + 24] += _;
                m[p + 17] = 0;
            }
            m[p + 16]++;
            p -= 9;
        }
        m[p + 24]--;
        if ((_ = m[p + 19]) !== 0) {
            m[p + 19] = 0;
        }
        m[p + 19]++;
    }
    m[p + 16]++;
    if ((_ = m[p + 24]) !== 0) {
        m[p + 16] += _ * -1;
        m[p + 24] = 0;
    }
    m[p + 24]++;
    while (m[p + 16] !== 0) {
        m[p + 16]--;
        m[p + 24]--;
        while (m[p + 25] !== 0) {
            if ((_ = m[p + 31]) !== 0) {
                m[p + 33] += _;
                m[p + 31] = 0;
            }
            p += 9;
        }
        while (m[p + 16] !== 0) {
            if ((_ = m[p + 17]) !== 0) {
                m[p + 17] = 0;
            }
            m[p + 16]--;
            while (m[p + 24] !== 0) {
                m[p + 24]--;
                m[p + 16]++;
                if ((_ = m[p + 17]) !== 0) {
                    m[p + 16] += _ * -1;
                    m[p + 15] += _;
                    m[p + 17] = 0;
                }
                if ((_ = m[p + 16]) !== 0) {
                    m[p + 17] += _;
                    m[p + 16] = 0;
                }
            }
            if ((_ = m[p + 17]) !== 0) {
                m[p + 24] += _;
                m[p + 17] = 0;
            }
            m[p + 16]++;
            p -= 9;
        }
        m[p + 17] += 5;
        while (m[p + 17] !== 0) {
            m[p + 17]--;
            if ((_ = m[p + 17]) !== 0) {
                m[p + 26] += _;
                m[p + 17] = 0;
            }
            p += 9;
        }
        m[p + 22]++;
        m[p + 49]++;
        while (m[p + 43] !== 0) {
            p -= 9;
        }
        while (m[p + 52] !== 0) {
            if ((_ = m[p + 58]) !== 0) {
                m[p + 52] += _ * -1;
                m[p + 58] = 0;
            }
            m[p + 58]++;
            while (m[p + 52] !== 0) {
                m[p + 52]--;
                m[p + 58]--;
                if ((_ = m[p + 60]) !== 0) {
                    m[p + 52] += _;
                    m[p + 60] = 0;
                }
                while (m[p + 52] !== 0) {
                    m[p + 52]--;
                    m[p + 60]++;
                    while (m[p + 43] !== 0) {
                        p -= 9;
                    }
                    if ((_ = m[p + 47]) !== 0) {
                        m[p + 47] = 0;
                    }
                    m[p + 47]++;
                    while (m[p + 52] !== 0) {
                        p += 9;
                    }
                    m[p + 53]++;
                }
            }
            m[p + 52]++;
            if ((_ = m[p + 60]) !== 0) {
                m[p + 52] += _ * -1;
                m[p + 60] = 0;
            }
            m[p + 60]++;
            while (m[p + 52] !== 0) {
                m[p + 52]--;
                m[p + 60]--;
                if ((_ = m[p + 58]) !== 0) {
                    m[p + 52] += _;
                    m[p + 58] = 0;
                }
                while (m[p + 52] !== 0) {
                    m[p + 52]--;
                    m[p + 58]++;
                    while (m[p + 43] !== 0) {
                        p -= 9;
                    }
                    if ((_ = m[p + 46]) !== 0) {
                        m[p + 46] = 0;
                    }
                    m[p + 46]++;
                    while (m[p + 52] !== 0) {
                        p += 9;
                    }
                    if ((_ = m[p + 53]) !== 0) {
                        m[p + 53] = 0;
                    }
                    m[p + 53]++;
                }
            }
            m[p + 52]++;
            while (m[p + 53] !== 0) {
                m[p + 53]--;
                while (m[p + 52] !== 0) {
                    p += 9;
                }
                p -= 9;
            }
            p += 9;
        }
        while (m[p + 43] !== 0) {
            p -= 9;
        }
        if ((_ = m[p + 47]) !== 0) {
            m[p + 47] = 0;
        }
        m[p + 44] += 5;
        while (m[p + 44] !== 0) {
            m[p + 44]--;
            if ((_ = m[p + 44]) !== 0) {
                m[p + 53] += _;
                m[p + 44] = 0;
            }
            p += 9;
        }
        m[p + 49]--;
        m[p + 76]--;
        while (m[p + 70] !== 0) {
            p -= 9;
        }
        p += 54;
    }
    p -= 9;
}
return self.postMessage({
    s: -1,
    o: o,
    c: c,
    m: m,
    p: p + 28,
    n: -1
});