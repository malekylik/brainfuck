const m = new Uint8Array(30000);
let p = 0;
m[p + 0] += 13;
if (m[p + 0]) {
    m[p + 1] += m[p + 0] * 2;
    m[p + 4] += m[p + 0] * 5;
    m[p + 5] += m[p + 0] * 2;
    m[p + 6] += m[p + 0];
    m[p + 0] = 0;
}
m[p + 5] += 6;
m[p + 6] -= 3;
m[p + 16] += 15;
while (m[p + 16]) {
    while (m[p + 16]) {
        p += 9;
    }
    m[p + 16] += 1;
    while (m[p + 16]) {
        p += -9;
    }
    m[p + 25] -= 1;
    p += 9;
}
m[p + 16] += 1;
while (m[p + 16]) {
    m[p + 24] = 0;
    p += 9;
}
while (m[p + 7]) {
    p += -9;
}
m[p + 15] = 1;
m[p + 8] += 5;
while (m[p + 8]) {
    m[p + 8] -= 1;
    m[p + 17] += m[p + 8];
    m[p + 8] = 0;
    p += 9;
}
m[p + 15] += 1;
m[p + 42] += 1;
while (m[p + 25]) {
    p += -9;
}
m[p + 28] = 1;
while (m[p + 28]) {
    while (m[p + 34]) {
        m[p + 41] = 0;
        p += 9;
    }
    while (m[p + 25]) {
        p += -9;
    }
    m[p + 32] = 1;
    m[p + 26] += 4;
    while (m[p + 26]) {
        m[p + 26] -= 1;
        m[p + 35] += m[p + 26];
        m[p + 26] = 0;
        p += 9;
    }
    m[p + 32] += 1;
    m[p + 26] += 7;
    while (m[p + 26]) {
        m[p + 26] -= 1;
        m[p + 35] += m[p + 26];
        m[p + 26] = 0;
        p += 9;
    }
    m[p + 32] += 1;
    while (m[p + 16]) {
        p += -9;
    }
    while (m[p + 19]) {
        m[p + 19] = 0;
        while (m[p + 25]) {
            m[p + 26] += m[p + 32];
            m[p + 32] = 0;
            if (m[p + 26]) {
                m[p + 32] += m[p + 26];
                m[p + 30] += m[p + 26];
                m[p + 27] += m[p + 26];
                m[p + 26] = 0;
            }
            p += 9;
        }
        while (m[p + 16]) {
            p += -9;
        }
        while (m[p + 25]) {
            m[p + 26] += m[p + 33];
            m[p + 33] = 0;
            if (m[p + 26]) {
                m[p + 33] += m[p + 26];
                m[p + 31] += m[p + 26];
                m[p + 28] += m[p + 26];
                m[p + 26] = 0;
            }
            p += 9;
        }
        while (m[p + 16]) {
            p += -9;
        }
        m[p + 16] += m[p + 23];
        m[p + 23] = 0;
        if (m[p + 16]) {
            m[p + 23] += m[p + 16];
            m[p + 21] += m[p + 16];
            m[p + 16] = 0;
        }
        m[p + 25] += 15;
        while (m[p + 25]) {
            while (m[p + 25]) {
                p += 9;
            }
            m[p + 25] += 1;
            m[p + 26] = m[p + 27] = m[p + 28] = m[p + 29] = m[p + 30] = m[p + 31] = m[p + 32] = m[p + 33] = m[p + 34] = 0;
            while (m[p + 25]) {
                p += -9;
            }
            m[p + 34] -= 1;
            p += 9;
        }
        m[p + 25] += 1;
        while (m[p + 25]) {
            m[p + 26] += 1;
            p += 9;
        }
        while (m[p + 16]) {
            p += -9;
        }
        while (m[p + 25]) {
            m[p + 26] -= 1;
            m[p + 26] += m[p + 30];
            m[p + 30] = 0;
            while (m[p + 26]) {
                m[p + 26] -= 1;
                m[p + 30] += 1;
                while (m[p + 25]) {
                    m[p + 25] -= 1;
                    m[p + 25] += m[p + 27];
                    m[p + 27] = 0;
                    if (m[p + 25]) {
                        m[p + 27] += m[p + 25];
                        m[p + 29] += m[p + 25];
                        m[p + 25] = 0;
                    }
                    m[p + 25] += 1;
                    p += 9;
                }
                while (m[p + 17]) {
                    p += -9;
                }
                p -= 9;
            }
            while (m[p + 35]) {
                p += 9;
            }
            while (m[p + 26]) {
                m[p + 36] += m[p + 27];
                m[p + 27] = 0;
                p -= 9;
            }
            m[p + 36] += m[p + 27];
            m[p + 27] = 0;
            m[p + 26] += 1;
            p += 9;
        }
        while (m[p + 16]) {
            m[p + 17] = 0;
            m[p + 16] -= 1;
            while (m[p + 20]) {
                m[p + 20] -= 1;
                m[p + 16] += 1;
                while (m[p + 17]) {
                    m[p + 16] -= 1;
                    m[p + 17] -= 1;
                    m[p + 11] += 1;
                }
                m[p + 17] += m[p + 16];
                m[p + 16] = 0;
            }
            m[p + 20] += m[p + 17];
            m[p + 17] = 0;
            m[p + 16] += 1;
            p -= 9;
        }
        while (m[p + 25]) {
            m[p + 26] += 1;
            p += 9;
        }
        while (m[p + 16]) {
            p += -9;
        }
        while (m[p + 25]) {
            m[p + 26] -= 1;
            m[p + 26] += m[p + 31];
            m[p + 31] = 0;
            while (m[p + 26]) {
                m[p + 26] -= 1;
                m[p + 31] += 1;
                while (m[p + 25]) {
                    m[p + 25] -= 1;
                    m[p + 25] += m[p + 28];
                    m[p + 28] = 0;
                    if (m[p + 25]) {
                        m[p + 28] += m[p + 25];
                        m[p + 29] += m[p + 25];
                        m[p + 25] = 0;
                    }
                    m[p + 25] += 1;
                    p += 9;
                }
                while (m[p + 17]) {
                    p += -9;
                }
                p -= 9;
            }
            while (m[p + 35]) {
                p += 9;
            }
            while (m[p + 26]) {
                m[p + 37] += m[p + 28];
                m[p + 28] = 0;
                p -= 9;
            }
            m[p + 37] += m[p + 28];
            m[p + 28] = 0;
            m[p + 26] += 1;
            p += 9;
        }
        while (m[p + 16]) {
            m[p + 17] = 0;
            m[p + 16] -= 1;
            while (m[p + 20]) {
                m[p + 20] -= 1;
                m[p + 16] += 1;
                while (m[p + 17]) {
                    m[p + 16] -= 1;
                    m[p + 17] -= 1;
                    m[p + 11] += 1;
                }
                m[p + 17] += m[p + 16];
                m[p + 16] = 0;
            }
            m[p + 20] += m[p + 17];
            m[p + 17] = 0;
            m[p + 16] += 1;
            p -= 9;
        }
        while (m[p + 25]) {
            m[p + -7] += m[p + 29];
            m[p + 29] = 0;
            p += 9;
        }
        while (m[p + 16]) {
            p += -9;
        }
        m[p + 25] += 15;
        while (m[p + 25]) {
            while (m[p + 25]) {
                p += 9;
            }
            m[p + 16] -= 1;
            while (m[p + 7]) {
                p += -9;
            }
            m[p + 16] -= 1;
            p -= 9;
        }
        m[p + 25] += 1;
        m[p + 46] += 1;
        while (m[p + 43]) {
            p += -9;
        }
        while (m[p + 52]) {
            if (m[p + 55]) {
                m[p + 52] -= m[p + 55];
                m[p + 55] = 0;
            }
            m[p + 55] += 1;
            while (m[p + 52]) {
                m[p + 52] -= 1;
                m[p + 55] -= 1;
                m[p + 52] += m[p + 56];
                m[p + 56] = 0;
                while (m[p + 52]) {
                    m[p + 52] -= 1;
                    m[p + 56] += 1;
                    while (m[p + 43]) {
                        p += -9;
                    }
                    m[p + 47] = 1;
                    while (m[p + 52]) {
                        p += 9;
                    }
                    m[p + 53] += 1;
                }
            }
            m[p + 52] += 1;
            if (m[p + 56]) {
                m[p + 52] -= m[p + 56];
                m[p + 56] = 0;
            }
            m[p + 56] += 1;
            while (m[p + 52]) {
                m[p + 52] -= 1;
                m[p + 56] -= 1;
                m[p + 52] += m[p + 55];
                m[p + 55] = 0;
                while (m[p + 52]) {
                    m[p + 52] -= 1;
                    m[p + 55] += 1;
                    while (m[p + 43]) {
                        p += -9;
                    }
                    m[p + 46] = 1;
                    while (m[p + 52]) {
                        p += 9;
                    }
                    m[p + 53] = 1;
                }
            }
            m[p + 52] += 1;
            while (m[p + 53]) {
                m[p + 53] -= 1;
                while (m[p + 52]) {
                    p += 9;
                }
                p -= 9;
            }
            p += 9;
        }
        while (m[p + 43]) {
            p += -9;
        }
        if (m[p + 36]) {
            m[p + 37] += m[p + 36];
            m[p + 40] -= m[p + 36];
            m[p + 36] = 0;
        }
        m[p + 45] += 26;
        m[p + 43] += m[p + 47];
        m[p + 47] = 0;
        if (m[p + 43]) {
            m[p + 47] += m[p + 43];
            m[p + 45] = 0;
            m[p + 43] = 0;
        }
        while (m[p + 45]) {
            m[p + 38] += 1;
            while (m[p + 37]) {
                m[p + 37] -= 1;
                m[p + 36] += 1;
                m[p + 40] += 1;
                m[p + 38] = 0;
                p += 1;
            }
            while (m[p + 38]) {
                m[p + 38] -= 1;
                if (m[p + 36]) {
                    m[p + 37] += m[p + 36];
                    m[p + 40] -= m[p + 36];
                    m[p + 36] = 0;
                }
                p += 1;
            }
            while (m[p + 51]) {
                m[p + 53] = 0;
                m[p + 54] = 0;
                m[p + 55] = 0;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            m[p + 45] = 0;
            while (m[p + 51]) {
                m[p + 52] += m[p + 56];
                m[p + 56] = 0;
                if (m[p + 52]) {
                    m[p + 56] += m[p + 52];
                    m[p + 53] += m[p + 52];
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            while (m[p + 51]) {
                m[p + 44] += m[p + 53];
                m[p + 53] = 0;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            m[p + 51] += 15;
            while (m[p + 51]) {
                while (m[p + 51]) {
                    p += 9;
                }
                m[p + 51] += 1;
                m[p + 52] = m[p + 53] = m[p + 54] = m[p + 55] = m[p + 56] = m[p + 57] = m[p + 58] = m[p + 59] = m[p + 60] = 0;
                while (m[p + 51]) {
                    p += -9;
                }
                m[p + 60] -= 1;
                p += 9;
            }
            m[p + 51] += 1;
            while (m[p + 51]) {
                m[p + 52] += 1;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            while (m[p + 51]) {
                m[p + 52] -= 1;
                m[p + 52] += m[p + 57];
                m[p + 57] = 0;
                while (m[p + 52]) {
                    m[p + 52] -= 1;
                    m[p + 57] += 1;
                    while (m[p + 51]) {
                        m[p + 51] -= 1;
                        m[p + 51] += m[p + 53];
                        m[p + 53] = 0;
                        if (m[p + 51]) {
                            m[p + 53] += m[p + 51];
                            m[p + 54] += m[p + 51];
                            m[p + 51] = 0;
                        }
                        m[p + 51] += 1;
                        p += 9;
                    }
                    while (m[p + 43]) {
                        p += -9;
                    }
                    p -= 9;
                }
                while (m[p + 61]) {
                    p += 9;
                }
                while (m[p + 52]) {
                    m[p + 62] += m[p + 53];
                    m[p + 53] = 0;
                    p -= 9;
                }
                m[p + 62] += m[p + 53];
                m[p + 53] = 0;
                m[p + 52] += 1;
                p += 9;
            }
            while (m[p + 42]) {
                m[p + 43] = 0;
                m[p + 42] -= 1;
                while (m[p + 45]) {
                    m[p + 45] -= 1;
                    m[p + 42] += 1;
                    while (m[p + 43]) {
                        m[p + 42] -= 1;
                        m[p + 43] -= 1;
                        m[p + 36] += 1;
                    }
                    m[p + 43] += m[p + 42];
                    m[p + 42] = 0;
                }
                m[p + 45] += m[p + 43];
                m[p + 43] = 0;
                m[p + 42] += 1;
                p -= 9;
            }
            while (m[p + 51]) {
                m[p + 52] += m[p + 57];
                m[p + 57] = 0;
                if (m[p + 52]) {
                    m[p + 57] += m[p + 52];
                    m[p + 53] += m[p + 52];
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            while (m[p + 51]) {
                m[p + 52] += 1;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            while (m[p + 51]) {
                m[p + 52] -= 1;
                m[p + 52] += m[p + 57];
                m[p + 57] = 0;
                while (m[p + 52]) {
                    m[p + 52] -= 1;
                    m[p + 57] += 1;
                    while (m[p + 51]) {
                        m[p + 51] -= 1;
                        m[p + 51] += m[p + 53];
                        m[p + 53] = 0;
                        if (m[p + 51]) {
                            m[p + 53] += m[p + 51];
                            m[p + 55] += m[p + 51];
                            m[p + 51] = 0;
                        }
                        m[p + 51] += 1;
                        p += 9;
                    }
                    while (m[p + 43]) {
                        p += -9;
                    }
                    p -= 9;
                }
                while (m[p + 61]) {
                    p += 9;
                }
                while (m[p + 52]) {
                    m[p + 62] += m[p + 53];
                    m[p + 53] = 0;
                    p -= 9;
                }
                m[p + 62] += m[p + 53];
                m[p + 53] = 0;
                m[p + 52] += 1;
                p += 9;
            }
            while (m[p + 42]) {
                m[p + 43] = 0;
                m[p + 42] -= 1;
                while (m[p + 46]) {
                    m[p + 46] -= 1;
                    m[p + 42] += 1;
                    while (m[p + 43]) {
                        m[p + 42] -= 1;
                        m[p + 43] -= 1;
                        m[p + 37] += 1;
                    }
                    m[p + 43] += m[p + 42];
                    m[p + 42] = 0;
                }
                m[p + 46] += m[p + 43];
                m[p + 43] = 0;
                m[p + 42] += 1;
                p -= 9;
            }
            while (m[p + 51]) {
                m[p + 19] += m[p + 55];
                m[p + 55] = 0;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            while (m[p + 51]) {
                m[p + 18] += m[p + 54];
                m[p + 54] = 0;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            m[p + 51] += 15;
            while (m[p + 51]) {
                while (m[p + 51]) {
                    p += 9;
                }
                m[p + 42] -= 1;
                while (m[p + 33]) {
                    p += -9;
                }
                m[p + 42] -= 1;
                p -= 9;
            }
            m[p + 51] += 1;
            while (m[p + 51]) {
                m[p + 52] += m[p + 59];
                m[p + 59] = 0;
                if (m[p + 52]) {
                    m[p + 59] += m[p + 52];
                    m[p + 53] += m[p + 52];
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            while (m[p + 51]) {
                m[p + 57] = 0;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            m[p + 46] += 1;
            if (m[p + 47]) {
                m[p + 46] -= m[p + 47];
                m[p + 42] += m[p + 47];
                m[p + 47] = 0;
            }
            while (m[p + 48]) {
                m[p + 48] -= 1;
                if (m[p + 42]) {
                    m[p + 47] += m[p + 42];
                    m[p + 46] += m[p + 42] * 2;
                    m[p + 42] = 0;
                }
                m[p + 42] += m[p + 47];
                m[p + 47] = 0;
                m[p + 46] -= 1;
                m[p + 47] += 1;
            }
            m[p + 48] += m[p + 47];
            m[p + 47] = 0;
            m[p + 47] += m[p + 42];
            m[p + 42] = 0;
            m[p + 48] = 0;
            m[p + 42] += 1;
            if (m[p + 46]) {
                m[p + 42] -= m[p + 46];
                m[p + 46] = 0;
            }
            m[p + 46] += 1;
            while (m[p + 42]) {
                m[p + 42] -= 1;
                m[p + 46] -= 1;
                while (m[p + 51]) {
                    if (m[p + 53]) {
                        m[p + 51] -= m[p + 53];
                        m[p + 53] = 0;
                    }
                    m[p + 53] += 1;
                    while (m[p + 51]) {
                        m[p + 51] -= 1;
                        m[p + 53] -= 1;
                        m[p + 51] += m[p + 54];
                        m[p + 54] = 0;
                        while (m[p + 51]) {
                            m[p + 51] -= 1;
                            m[p + 54] += 1;
                            while (m[p + 42]) {
                                p += -9;
                            }
                            m[p + 45] = 1;
                            while (m[p + 51]) {
                                p += 9;
                            }
                            m[p + 52] += 1;
                        }
                    }
                    m[p + 51] += 1;
                    if (m[p + 54]) {
                        m[p + 51] -= m[p + 54];
                        m[p + 54] = 0;
                    }
                    m[p + 54] += 1;
                    while (m[p + 51]) {
                        m[p + 51] -= 1;
                        m[p + 54] -= 1;
                        m[p + 51] += m[p + 53];
                        m[p + 53] = 0;
                        while (m[p + 51]) {
                            m[p + 51] -= 1;
                            m[p + 53] += 1;
                            while (m[p + 42]) {
                                p += -9;
                            }
                            m[p + 46] = 1;
                            while (m[p + 51]) {
                                p += 9;
                            }
                            m[p + 52] = 1;
                        }
                    }
                    m[p + 51] += 1;
                    while (m[p + 52]) {
                        m[p + 52] -= 1;
                        while (m[p + 51]) {
                            p += 9;
                        }
                        p -= 9;
                    }
                    p += 9;
                }
                while (m[p + 42]) {
                    p += -9;
                }
                m[p + 42] += m[p + 46];
                m[p + 46] = 0;
                while (m[p + 42]) {
                    m[p + 42] -= 1;
                    m[p + 46] += 1;
                    while (m[p + 51]) {
                        m[p + 52] += 1;
                        if (m[p + 54]) {
                            m[p + 52] -= m[p + 54];
                            m[p + 54] = 0;
                        }
                        m[p + 54] += m[p + 52];
                        m[p + 52] = 0;
                        p += 9;
                    }
                    m[p + 43] += 1;
                    while (m[p + 42]) {
                        while (m[p + 43]) {
                            m[p + 43] -= 1;
                            m[p + 48] += 1;
                            while (m[p + 44]) {
                                m[p + 44] -= 1;
                                m[p + 48] -= 1;
                                m[p + 34] += 1;
                                m[p + 48] += m[p + 45];
                                m[p + 45] = 0;
                            }
                            if (m[p + 45]) {
                                m[p + 48] -= m[p + 45];
                                m[p + 34] += m[p + 45];
                                m[p + 45] = 0;
                            }
                        }
                        if (m[p + 44]) {
                            m[p + 48] += m[p + 44];
                            if (m[p + 45]) {
                                m[p + 48] -= m[p + 45];
                                m[p + 34] += m[p + 45];
                                m[p + 45] = 0;
                            }
                            m[p + 44] = 0;
                        }
                        m[p + 48] += m[p + 45];
                        m[p + 45] = 0;
                        p -= 9;
                    }
                    m[p + 46] = 0;
                }
                m[p + 42] += m[p + 45];
                m[p + 45] = 0;
                while (m[p + 42]) {
                    m[p + 42] -= 1;
                    m[p + 45] += 1;
                    while (m[p + 51]) {
                        m[p + 52] += 1;
                        if (m[p + 53]) {
                            m[p + 52] -= m[p + 53];
                            m[p + 53] = 0;
                        }
                        m[p + 53] += m[p + 52];
                        m[p + 52] = 0;
                        p += 9;
                    }
                    m[p + 43] += 1;
                    while (m[p + 42]) {
                        while (m[p + 43]) {
                            m[p + 43] -= 1;
                            m[p + 48] += 1;
                            while (m[p + 45]) {
                                m[p + 45] -= 1;
                                m[p + 48] -= 1;
                                m[p + 34] += 1;
                                m[p + 48] += m[p + 44];
                                m[p + 44] = 0;
                            }
                            if (m[p + 44]) {
                                m[p + 48] -= m[p + 44];
                                m[p + 34] += m[p + 44];
                                m[p + 44] = 0;
                            }
                        }
                        if (m[p + 45]) {
                            m[p + 48] += m[p + 45];
                            if (m[p + 44]) {
                                m[p + 48] -= m[p + 44];
                                m[p + 34] += m[p + 44];
                                m[p + 44] = 0;
                            }
                            m[p + 45] = 0;
                        }
                        m[p + 48] += m[p + 44];
                        m[p + 44] = 0;
                        p -= 9;
                    }
                    m[p + 48] += 1;
                }
            }
            m[p + 42] += m[p + 46];
            m[p + 46] = 0;
            while (m[p + 42]) {
                m[p + 42] -= 1;
                m[p + 46] += 1;
                while (m[p + 51]) {
                    p += 9;
                }
                while (m[p + 42]) {
                    while (m[p + 43]) {
                        m[p + 43] -= 1;
                        m[p + 48] += 1;
                        while (m[p + 44]) {
                            m[p + 44] -= 1;
                            m[p + 48] -= 1;
                            m[p + 34] += 1;
                            m[p + 48] += m[p + 45];
                            m[p + 45] = 0;
                        }
                        if (m[p + 45]) {
                            m[p + 48] -= m[p + 45];
                            m[p + 34] += m[p + 45];
                            m[p + 45] = 0;
                        }
                    }
                    if (m[p + 44]) {
                        m[p + 48] += m[p + 44];
                        if (m[p + 45]) {
                            m[p + 48] -= m[p + 45];
                            m[p + 34] += m[p + 45];
                            m[p + 45] = 0;
                        }
                        m[p + 44] = 0;
                    }
                    m[p + 48] += m[p + 45];
                    m[p + 45] = 0;
                    p -= 9;
                }
            }
            m[p + 43] = 0;
            m[p + 45] = 0;
            m[p + 46] = 0;
            while (m[p + 51]) {
                m[p + 53] = 0;
                m[p + 54] = 0;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            while (m[p + 51]) {
                m[p + 52] += m[p + 56];
                m[p + 56] = 0;
                if (m[p + 52]) {
                    m[p + 56] += m[p + 52];
                    m[p + 53] += m[p + 52];
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            m[p + 51] += 15;
            while (m[p + 51]) {
                while (m[p + 51]) {
                    p += 9;
                }
                m[p + 51] += 1;
                m[p + 52] = m[p + 53] = m[p + 54] = m[p + 55] = m[p + 56] = m[p + 57] = m[p + 58] = m[p + 59] = m[p + 60] = 0;
                while (m[p + 51]) {
                    p += -9;
                }
                m[p + 60] -= 1;
                p += 9;
            }
            m[p + 51] += 1;
            while (m[p + 51]) {
                m[p + 52] += 1;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            while (m[p + 51]) {
                m[p + 52] -= 1;
                m[p + 52] += m[p + 56];
                m[p + 56] = 0;
                while (m[p + 52]) {
                    m[p + 52] -= 1;
                    m[p + 56] += 1;
                    while (m[p + 51]) {
                        m[p + 51] -= 1;
                        m[p + 51] += m[p + 53];
                        m[p + 53] = 0;
                        if (m[p + 51]) {
                            m[p + 53] += m[p + 51];
                            m[p + 54] += m[p + 51];
                            m[p + 51] = 0;
                        }
                        m[p + 51] += 1;
                        p += 9;
                    }
                    while (m[p + 43]) {
                        p += -9;
                    }
                    p -= 9;
                }
                while (m[p + 61]) {
                    p += 9;
                }
                while (m[p + 52]) {
                    m[p + 62] += m[p + 53];
                    m[p + 53] = 0;
                    p -= 9;
                }
                m[p + 62] += m[p + 53];
                m[p + 53] = 0;
                m[p + 52] += 1;
                p += 9;
            }
            while (m[p + 42]) {
                m[p + 43] = 0;
                m[p + 42] -= 1;
                while (m[p + 45]) {
                    m[p + 45] -= 1;
                    m[p + 42] += 1;
                    while (m[p + 43]) {
                        m[p + 42] -= 1;
                        m[p + 43] -= 1;
                        m[p + 36] += 1;
                    }
                    m[p + 43] += m[p + 42];
                    m[p + 42] = 0;
                }
                m[p + 45] += m[p + 43];
                m[p + 43] = 0;
                m[p + 42] += 1;
                p -= 9;
            }
            while (m[p + 51]) {
                m[p + 18] += m[p + 54];
                m[p + 54] = 0;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            m[p + 47] = 0;
            m[p + 51] += 15;
            while (m[p + 51]) {
                while (m[p + 51]) {
                    p += 9;
                }
                m[p + 42] -= 1;
                while (m[p + 33]) {
                    p += -9;
                }
                m[p + 42] -= 1;
                p -= 9;
            }
            m[p + 51] += 1;
            while (m[p + 51]) {
                if (m[p + 54]) {
                    m[p + 51] -= m[p + 54];
                    m[p + 54] = 0;
                }
                m[p + 54] += 1;
                while (m[p + 51]) {
                    m[p + 51] -= 1;
                    m[p + 54] -= 1;
                    m[p + 51] += m[p + 55];
                    m[p + 55] = 0;
                    while (m[p + 51]) {
                        m[p + 51] -= 1;
                        m[p + 55] += 1;
                        while (m[p + 42]) {
                            p += -9;
                        }
                        m[p + 46] = 1;
                        while (m[p + 51]) {
                            p += 9;
                        }
                        m[p + 52] += 1;
                    }
                }
                m[p + 51] += 1;
                if (m[p + 55]) {
                    m[p + 51] -= m[p + 55];
                    m[p + 55] = 0;
                }
                m[p + 55] += 1;
                while (m[p + 51]) {
                    m[p + 51] -= 1;
                    m[p + 55] -= 1;
                    m[p + 51] += m[p + 54];
                    m[p + 54] = 0;
                    while (m[p + 51]) {
                        m[p + 51] -= 1;
                        m[p + 54] += 1;
                        while (m[p + 42]) {
                            p += -9;
                        }
                        m[p + 45] = 1;
                        while (m[p + 51]) {
                            p += 9;
                        }
                        m[p + 52] = 1;
                    }
                }
                m[p + 51] += 1;
                while (m[p + 52]) {
                    m[p + 52] -= 1;
                    while (m[p + 51]) {
                        p += 9;
                    }
                    p -= 9;
                }
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            m[p + 42] += m[p + 45];
            m[p + 45] = 0;
            while (m[p + 42]) {
                m[p + 42] -= 1;
                m[p + 45] += 1;
                while (m[p + 51]) {
                    m[p + 52] += 1;
                    if (m[p + 55]) {
                        m[p + 52] -= m[p + 55];
                        m[p + 55] = 0;
                    }
                    m[p + 55] += m[p + 52];
                    m[p + 52] = 0;
                    p += 9;
                }
                m[p + 43] += 1;
                while (m[p + 42]) {
                    while (m[p + 43]) {
                        m[p + 43] -= 1;
                        m[p + 44] += 1;
                        while (m[p + 45]) {
                            m[p + 45] -= 1;
                            m[p + 44] -= 1;
                            m[p + 34] += 1;
                            m[p + 44] += m[p + 46];
                            m[p + 46] = 0;
                        }
                        if (m[p + 46]) {
                            m[p + 44] -= m[p + 46];
                            m[p + 34] += m[p + 46];
                            m[p + 46] = 0;
                        }
                    }
                    if (m[p + 45]) {
                        m[p + 44] += m[p + 45];
                        if (m[p + 46]) {
                            m[p + 44] -= m[p + 46];
                            m[p + 34] += m[p + 46];
                            m[p + 46] = 0;
                        }
                        m[p + 45] = 0;
                    }
                    m[p + 44] += m[p + 46];
                    m[p + 46] = 0;
                    p -= 9;
                }
            }
            m[p + 42] += m[p + 46];
            m[p + 46] = 0;
            while (m[p + 42]) {
                m[p + 42] -= 1;
                m[p + 46] += 1;
                while (m[p + 51]) {
                    m[p + 52] += 1;
                    if (m[p + 54]) {
                        m[p + 52] -= m[p + 54];
                        m[p + 54] = 0;
                    }
                    m[p + 54] += m[p + 52];
                    m[p + 52] = 0;
                    p += 9;
                }
                m[p + 43] += 1;
                while (m[p + 42]) {
                    while (m[p + 43]) {
                        m[p + 43] -= 1;
                        m[p + 44] += 1;
                        while (m[p + 46]) {
                            m[p + 46] -= 1;
                            m[p + 44] -= 1;
                            m[p + 34] += 1;
                            m[p + 44] += m[p + 45];
                            m[p + 45] = 0;
                        }
                        if (m[p + 45]) {
                            m[p + 44] -= m[p + 45];
                            m[p + 34] += m[p + 45];
                            m[p + 45] = 0;
                        }
                    }
                    if (m[p + 46]) {
                        m[p + 44] += m[p + 46];
                        if (m[p + 45]) {
                            m[p + 44] -= m[p + 45];
                            m[p + 34] += m[p + 45];
                            m[p + 45] = 0;
                        }
                        m[p + 46] = 0;
                    }
                    m[p + 44] += m[p + 45];
                    m[p + 45] = 0;
                    p -= 9;
                }
                m[p + 47] += 1;
            }
            while (m[p + 51]) {
                m[p + 54] = 0;
                m[p + 55] = 0;
                m[p + 56] = 0;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            m[p + 45] = 0;
            m[p + 46] = 0;
            while (m[p + 51]) {
                m[p + 52] += m[p + 58];
                m[p + 58] = 0;
                if (m[p + 52]) {
                    m[p + 58] += m[p + 52];
                    m[p + 54] += m[p + 52];
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            m[p + 46] += 1;
            if (m[p + 47]) {
                m[p + 46] -= m[p + 47];
                m[p + 42] += m[p + 47];
                m[p + 47] = 0;
            }
            while (m[p + 49]) {
                m[p + 49] -= 1;
                if (m[p + 42]) {
                    m[p + 47] += m[p + 42];
                    m[p + 46] += m[p + 42] * 2;
                    m[p + 42] = 0;
                }
                m[p + 42] += m[p + 47];
                m[p + 47] = 0;
                m[p + 46] -= 1;
                m[p + 47] += 1;
            }
            m[p + 49] += m[p + 47];
            m[p + 47] = 0;
            m[p + 47] += m[p + 42];
            m[p + 42] = 0;
            m[p + 42] += 1;
            if (m[p + 46]) {
                m[p + 42] -= m[p + 46];
                m[p + 46] = 0;
            }
            m[p + 46] += 1;
            while (m[p + 42]) {
                m[p + 42] -= 1;
                m[p + 46] -= 1;
                while (m[p + 51]) {
                    if (m[p + 54]) {
                        m[p + 51] -= m[p + 54];
                        m[p + 54] = 0;
                    }
                    m[p + 54] += 1;
                    while (m[p + 51]) {
                        m[p + 51] -= 1;
                        m[p + 54] -= 1;
                        m[p + 51] += m[p + 53];
                        m[p + 53] = 0;
                        while (m[p + 51]) {
                            m[p + 51] -= 1;
                            m[p + 53] += 1;
                            while (m[p + 42]) {
                                p += -9;
                            }
                            m[p + 46] = 1;
                            while (m[p + 51]) {
                                p += 9;
                            }
                            m[p + 52] += 1;
                        }
                    }
                    m[p + 51] += 1;
                    if (m[p + 53]) {
                        m[p + 51] -= m[p + 53];
                        m[p + 53] = 0;
                    }
                    m[p + 53] += 1;
                    while (m[p + 51]) {
                        m[p + 51] -= 1;
                        m[p + 53] -= 1;
                        m[p + 51] += m[p + 54];
                        m[p + 54] = 0;
                        while (m[p + 51]) {
                            m[p + 51] -= 1;
                            m[p + 54] += 1;
                            while (m[p + 42]) {
                                p += -9;
                            }
                            m[p + 45] = 1;
                            while (m[p + 51]) {
                                p += 9;
                            }
                            m[p + 52] = 1;
                        }
                    }
                    m[p + 51] += 1;
                    while (m[p + 52]) {
                        m[p + 52] -= 1;
                        while (m[p + 51]) {
                            p += 9;
                        }
                        p -= 9;
                    }
                    p += 9;
                }
                while (m[p + 42]) {
                    p += -9;
                }
                m[p + 42] += m[p + 45];
                m[p + 45] = 0;
                while (m[p + 42]) {
                    m[p + 42] -= 1;
                    m[p + 45] += 1;
                    while (m[p + 51]) {
                        m[p + 52] += 1;
                        if (m[p + 53]) {
                            m[p + 52] -= m[p + 53];
                            m[p + 53] = 0;
                        }
                        m[p + 53] += m[p + 52];
                        m[p + 52] = 0;
                        p += 9;
                    }
                    m[p + 43] += 1;
                    while (m[p + 42]) {
                        while (m[p + 43]) {
                            m[p + 43] -= 1;
                            m[p + 47] += 1;
                            while (m[p + 45]) {
                                m[p + 45] -= 1;
                                m[p + 47] -= 1;
                                m[p + 34] += 1;
                                m[p + 47] += m[p + 44];
                                m[p + 44] = 0;
                            }
                            if (m[p + 44]) {
                                m[p + 47] -= m[p + 44];
                                m[p + 34] += m[p + 44];
                                m[p + 44] = 0;
                            }
                        }
                        if (m[p + 45]) {
                            m[p + 47] += m[p + 45];
                            if (m[p + 44]) {
                                m[p + 47] -= m[p + 44];
                                m[p + 34] += m[p + 44];
                                m[p + 44] = 0;
                            }
                            m[p + 45] = 0;
                        }
                        m[p + 47] += m[p + 44];
                        m[p + 44] = 0;
                        p -= 9;
                    }
                    m[p + 47] = 0;
                    m[p + 42] += m[p + 49];
                    m[p + 49] = 0;
                    if (m[p + 42]) {
                        m[p + 49] += m[p + 42];
                        m[p + 47] += m[p + 42];
                        m[p + 42] = 0;
                    }
                }
                m[p + 42] += m[p + 46];
                m[p + 46] = 0;
                while (m[p + 42]) {
                    m[p + 42] -= 1;
                    m[p + 46] += 1;
                    while (m[p + 51]) {
                        m[p + 52] += 1;
                        if (m[p + 54]) {
                            m[p + 52] -= m[p + 54];
                            m[p + 54] = 0;
                        }
                        m[p + 54] += m[p + 52];
                        m[p + 52] = 0;
                        p += 9;
                    }
                    m[p + 43] += 1;
                    while (m[p + 42]) {
                        while (m[p + 43]) {
                            m[p + 43] -= 1;
                            m[p + 47] += 1;
                            while (m[p + 44]) {
                                m[p + 44] -= 1;
                                m[p + 47] -= 1;
                                m[p + 34] += 1;
                                m[p + 47] += m[p + 45];
                                m[p + 45] = 0;
                            }
                            if (m[p + 45]) {
                                m[p + 47] -= m[p + 45];
                                m[p + 34] += m[p + 45];
                                m[p + 45] = 0;
                            }
                        }
                        if (m[p + 44]) {
                            m[p + 47] += m[p + 44];
                            if (m[p + 45]) {
                                m[p + 47] -= m[p + 45];
                                m[p + 34] += m[p + 45];
                                m[p + 45] = 0;
                            }
                            m[p + 44] = 0;
                        }
                        m[p + 47] += m[p + 45];
                        m[p + 45] = 0;
                        p -= 9;
                    }
                }
                m[p + 46] = 0;
            }
            m[p + 42] += m[p + 46];
            m[p + 46] = 0;
            while (m[p + 42]) {
                m[p + 42] -= 1;
                m[p + 46] += 1;
                m[p + 47] = 0;
                m[p + 42] += m[p + 49];
                m[p + 49] = 0;
                if (m[p + 42]) {
                    m[p + 49] += m[p + 42];
                    m[p + 47] += m[p + 42];
                    m[p + 42] = 0;
                }
                while (m[p + 51]) {
                    p += 9;
                }
                while (m[p + 42]) {
                    while (m[p + 43]) {
                        m[p + 43] -= 1;
                        m[p + 47] += 1;
                        while (m[p + 44]) {
                            m[p + 44] -= 1;
                            m[p + 47] -= 1;
                            m[p + 34] += 1;
                            m[p + 47] += m[p + 45];
                            m[p + 45] = 0;
                        }
                        if (m[p + 45]) {
                            m[p + 47] -= m[p + 45];
                            m[p + 34] += m[p + 45];
                            m[p + 45] = 0;
                        }
                    }
                    if (m[p + 44]) {
                        m[p + 47] += m[p + 44];
                        if (m[p + 45]) {
                            m[p + 47] -= m[p + 45];
                            m[p + 34] += m[p + 45];
                            m[p + 45] = 0;
                        }
                        m[p + 44] = 0;
                    }
                    m[p + 47] += m[p + 45];
                    m[p + 45] = 0;
                    p -= 9;
                }
            }
            while (m[p + 51]) {
                m[p + 53] = 0;
                m[p + 54] = 0;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            m[p + 45] = 0;
            m[p + 46] = 0;
            while (m[p + 51]) {
                m[p + 52] += m[p + 56];
                m[p + 56] = 0;
                if (m[p + 52]) {
                    m[p + 56] += m[p + 52];
                    m[p + 53] += m[p + 52];
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            while (m[p + 51]) {
                m[p + 52] += m[p + 57];
                m[p + 57] = 0;
                if (m[p + 52]) {
                    m[p + 57] += m[p + 52];
                    m[p + 54] += m[p + 52];
                    m[p + 52] = 0;
                }
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            m[p + 51] += 15;
            while (m[p + 51]) {
                while (m[p + 51]) {
                    p += 9;
                }
                m[p + 51] += 1;
                m[p + 52] = m[p + 53] = m[p + 54] = m[p + 55] = m[p + 56] = m[p + 57] = m[p + 58] = m[p + 59] = m[p + 60] = 0;
                while (m[p + 51]) {
                    p += -9;
                }
                m[p + 60] -= 1;
                p += 9;
            }
            m[p + 51] += 1;
            while (m[p + 51]) {
                m[p + 52] += 1;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            while (m[p + 51]) {
                m[p + 52] -= 1;
                m[p + 52] += m[p + 56];
                m[p + 56] = 0;
                while (m[p + 52]) {
                    m[p + 52] -= 1;
                    m[p + 56] += 1;
                    while (m[p + 51]) {
                        m[p + 51] -= 1;
                        m[p + 51] += m[p + 53];
                        m[p + 53] = 0;
                        if (m[p + 51]) {
                            m[p + 53] += m[p + 51];
                            m[p + 55] += m[p + 51];
                            m[p + 51] = 0;
                        }
                        m[p + 51] += 1;
                        p += 9;
                    }
                    while (m[p + 43]) {
                        p += -9;
                    }
                    p -= 9;
                }
                while (m[p + 61]) {
                    p += 9;
                }
                while (m[p + 52]) {
                    m[p + 62] += m[p + 53];
                    m[p + 53] = 0;
                    p -= 9;
                }
                m[p + 62] += m[p + 53];
                m[p + 53] = 0;
                m[p + 52] += 1;
                p += 9;
            }
            while (m[p + 42]) {
                m[p + 43] = 0;
                m[p + 42] -= 1;
                while (m[p + 46]) {
                    m[p + 46] -= 1;
                    m[p + 42] += 1;
                    while (m[p + 43]) {
                        m[p + 42] -= 1;
                        m[p + 43] -= 1;
                        m[p + 37] += 1;
                    }
                    m[p + 43] += m[p + 42];
                    m[p + 42] = 0;
                }
                m[p + 46] += m[p + 43];
                m[p + 43] = 0;
                m[p + 42] += 1;
                p -= 9;
            }
            while (m[p + 51]) {
                m[p + 52] += 1;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            while (m[p + 51]) {
                m[p + 52] -= 1;
                m[p + 52] += m[p + 57];
                m[p + 57] = 0;
                while (m[p + 52]) {
                    m[p + 52] -= 1;
                    m[p + 57] += 1;
                    while (m[p + 51]) {
                        m[p + 51] -= 1;
                        m[p + 51] += m[p + 54];
                        m[p + 54] = 0;
                        if (m[p + 51]) {
                            m[p + 54] += m[p + 51];
                            m[p + 55] += m[p + 51];
                            m[p + 51] = 0;
                        }
                        m[p + 51] += 1;
                        p += 9;
                    }
                    while (m[p + 43]) {
                        p += -9;
                    }
                    p -= 9;
                }
                while (m[p + 61]) {
                    p += 9;
                }
                while (m[p + 52]) {
                    m[p + 63] += m[p + 54];
                    m[p + 54] = 0;
                    p -= 9;
                }
                m[p + 63] += m[p + 54];
                m[p + 54] = 0;
                m[p + 52] += 1;
                p += 9;
            }
            while (m[p + 42]) {
                m[p + 43] = 0;
                m[p + 42] -= 1;
                while (m[p + 46]) {
                    m[p + 46] -= 1;
                    m[p + 42] += 1;
                    while (m[p + 43]) {
                        m[p + 42] -= 1;
                        m[p + 43] -= 1;
                        m[p + 37] += 1;
                    }
                    m[p + 43] += m[p + 42];
                    m[p + 42] = 0;
                }
                m[p + 46] += m[p + 43];
                m[p + 43] = 0;
                m[p + 42] += 1;
                p -= 9;
            }
            while (m[p + 51]) {
                m[p + 19] += m[p + 55];
                m[p + 55] = 0;
                p += 9;
            }
            while (m[p + 42]) {
                p += -9;
            }
            m[p + 51] += 15;
            while (m[p + 51]) {
                while (m[p + 51]) {
                    p += 9;
                }
                m[p + 42] -= 1;
                while (m[p + 33]) {
                    p += -9;
                }
                m[p + 42] -= 1;
                p -= 9;
            }
            m[p + 51] += 1;
            m[p + 72] += 1;
            while (m[p + 69]) {
                p += -9;
            }
            while (m[p + 78]) {
                if (m[p + 81]) {
                    m[p + 78] -= m[p + 81];
                    m[p + 81] = 0;
                }
                m[p + 81] += 1;
                while (m[p + 78]) {
                    m[p + 78] -= 1;
                    m[p + 81] -= 1;
                    m[p + 78] += m[p + 82];
                    m[p + 82] = 0;
                    while (m[p + 78]) {
                        m[p + 78] -= 1;
                        m[p + 82] += 1;
                        while (m[p + 69]) {
                            p += -9;
                        }
                        m[p + 73] = 1;
                        while (m[p + 78]) {
                            p += 9;
                        }
                        m[p + 79] += 1;
                    }
                }
                m[p + 78] += 1;
                if (m[p + 82]) {
                    m[p + 78] -= m[p + 82];
                    m[p + 82] = 0;
                }
                m[p + 82] += 1;
                while (m[p + 78]) {
                    m[p + 78] -= 1;
                    m[p + 82] -= 1;
                    m[p + 78] += m[p + 81];
                    m[p + 81] = 0;
                    while (m[p + 78]) {
                        m[p + 78] -= 1;
                        m[p + 81] += 1;
                        while (m[p + 69]) {
                            p += -9;
                        }
                        m[p + 72] = 1;
                        while (m[p + 78]) {
                            p += 9;
                        }
                        m[p + 79] = 1;
                    }
                }
                m[p + 78] += 1;
                while (m[p + 79]) {
                    m[p + 79] -= 1;
                    while (m[p + 78]) {
                        p += 9;
                    }
                    p -= 9;
                }
                p += 9;
            }
            while (m[p + 69]) {
                p += -9;
            }
            m[p + 71] -= 1;
            m[p + 69] += m[p + 73];
            m[p + 73] = 0;
            if (m[p + 69]) {
                m[p + 73] += m[p + 69];
                m[p + 71] = 0;
                m[p + 69] = 0;
            }
            p += 26;
        }
        m[p + 43] += 1;
        if (m[p + 47]) {
            m[p + 43] -= m[p + 47];
            m[p + 47] = 0;
        }
        m[p + 47] += 1;
        if (m[p + 43]) {
            m[p + 47] -= m[p + 43];
            outF(m[p + 41]);
            m[p + 43] = 0;
        }
        if (m[p + 47]) {
            outF(m[p + 40]);
            m[p + 47] = 0;
        }
        m[p + 44] = 0;
        m[p + 45] = 0;
        m[p + 46] = 0;
        m[p + 47] = 0;
        m[p + 48] = 0;
        m[p + 49] = 0;
        while (m[p + 52]) {
            m[p + 53] = 0;
            m[p + 54] = 0;
            m[p + 55] = 0;
            m[p + 56] = 0;
            m[p + 57] = 0;
            m[p + 58] = 0;
            p += 9;
        }
        while (m[p + 43]) {
            p += -9;
        }
        while (m[p + 52]) {
            m[p + 57] = 0;
            p += 9;
        }
        while (m[p + 43]) {
            p += -9;
        }
        m[p + 44] += 11;
        while (m[p + 44]) {
            m[p + 44] -= 1;
            m[p + 53] += m[p + 44];
            m[p + 44] = 0;
            p += 9;
        }
        m[p + 48] += 1;
        m[p + 57] += 1;
        while (m[p + 43]) {
            p += -9;
        }
        m[p + 43] += m[p + 50];
        m[p + 50] = 0;
        while (m[p + 43]) {
            m[p + 43] -= 1;
            m[p + 50] += 1;
            m[p + 50] = 0;
            while (m[p + 52]) {
                p += 9;
            }
            while (m[p + 43]) {
                m[p + 44] += m[p + 50];
                m[p + 50] = 0;
                while (m[p + 44]) {
                    m[p + 44] -= 1;
                    m[p + 50] += 1;
                    while (m[p + 43]) {
                        p += -9;
                    }
                    m[p + 50] = 1;
                    p += 9;
                }
                p -= 9;
            }
        }
        m[p + 43] += m[p + 50];
        m[p + 50] = 0;
        while (m[p + 43]) {
            m[p + 43] -= 1;
            m[p + 50] += 1;
            while (m[p + 52]) {
                m[p + 53] += 1;
                if (m[p + 57]) {
                    m[p + 53] -= m[p + 57];
                    m[p + 57] = 0;
                }
                m[p + 57] += m[p + 53];
                m[p + 53] = 0;
                p += 9;
            }
            m[p + 50] += 1;
            while (m[p + 43]) {
                m[p + 50] += m[p + 48];
                m[p + 48] = 0;
                p -= 9;
            }
            while (m[p + 52]) {
                p += 9;
            }
            while (m[p + 43]) {
                m[p + 44] = 0;
                m[p + 43] -= 1;
                while (m[p + 50]) {
                    m[p + 50] -= 1;
                    m[p + 43] += 1;
                    while (m[p + 44]) {
                        m[p + 43] -= 1;
                        m[p + 44] -= 1;
                        m[p + 41] += 1;
                    }
                    m[p + 44] += m[p + 43];
                    m[p + 43] = 0;
                }
                m[p + 50] += m[p + 44];
                m[p + 44] = 0;
                m[p + 43] += 1;
                p -= 9;
            }
            m[p + 50] -= 1;
            m[p + 46] = 1;
        }
        m[p + 43] += 1;
        if (m[p + 50]) {
            m[p + 43] -= m[p + 50];
            m[p + 50] = 0;
        }
        m[p + 50] += 1;
        while (m[p + 43]) {
            m[p + 43] -= 1;
            m[p + 50] -= 1;
            while (m[p + 52]) {
                m[p + 59] += m[p + 57];
                m[p + 57] = 0;
                p += 9;
            }
            while (m[p + 43]) {
                m[p + 44] = 0;
                m[p + 43] -= 1;
                while (m[p + 50]) {
                    m[p + 50] -= 1;
                    m[p + 43] += 1;
                    while (m[p + 44]) {
                        m[p + 43] -= 1;
                        m[p + 44] -= 1;
                        m[p + 41] += 1;
                    }
                    m[p + 44] += m[p + 43];
                    m[p + 43] = 0;
                }
                m[p + 50] += m[p + 44];
                m[p + 44] = 0;
                m[p + 43] += 1;
                p -= 9;
            }
            m[p + 44] += 5;
            while (m[p + 44]) {
                m[p + 44] -= 1;
                m[p + 53] += m[p + 44];
                m[p + 44] = 0;
                p += 9;
            }
            m[p + 48] += 1;
            while (m[p + 43]) {
                p += -9;
            }
            while (m[p + 52]) {
                if (m[p + 57]) {
                    m[p + 52] -= m[p + 57];
                    m[p + 57] = 0;
                }
                m[p + 57] += 1;
                while (m[p + 52]) {
                    m[p + 52] -= 1;
                    m[p + 57] -= 1;
                    m[p + 52] += m[p + 59];
                    m[p + 59] = 0;
                    while (m[p + 52]) {
                        m[p + 52] -= 1;
                        m[p + 59] += 1;
                        while (m[p + 43]) {
                            p += -9;
                        }
                        m[p + 47] = 1;
                        while (m[p + 52]) {
                            p += 9;
                        }
                        m[p + 53] += 1;
                    }
                }
                m[p + 52] += 1;
                if (m[p + 59]) {
                    m[p + 52] -= m[p + 59];
                    m[p + 59] = 0;
                }
                m[p + 59] += 1;
                while (m[p + 52]) {
                    m[p + 52] -= 1;
                    m[p + 59] -= 1;
                    m[p + 52] += m[p + 57];
                    m[p + 57] = 0;
                    while (m[p + 52]) {
                        m[p + 52] -= 1;
                        m[p + 57] += 1;
                        while (m[p + 43]) {
                            p += -9;
                        }
                        m[p + 46] = 1;
                        while (m[p + 52]) {
                            p += 9;
                        }
                        m[p + 53] = 1;
                    }
                }
                m[p + 52] += 1;
                while (m[p + 53]) {
                    m[p + 53] -= 1;
                    while (m[p + 52]) {
                        p += 9;
                    }
                    p -= 9;
                }
                p += 9;
            }
            while (m[p + 43]) {
                p += -9;
            }
            m[p + 47] = 0;
            m[p + 44] += 5;
            while (m[p + 44]) {
                m[p + 44] -= 1;
                m[p + 53] += m[p + 44];
                m[p + 44] = 0;
                p += 9;
            }
            m[p + 48] -= 1;
            while (m[p + 43]) {
                p += -9;
            }
        }
        p += 27;
    }
    outF(m[p + 15]);
    while (m[p + 25]) {
        m[p + 31] = 0;
        p += 9;
    }
    while (m[p + 16]) {
        p += -9;
    }
    m[p + 17] += 10;
    while (m[p + 17]) {
        m[p + 17] -= 1;
        m[p + 26] += m[p + 17];
        m[p + 17] = 0;
        p += 9;
    }
    m[p + 22] += 1;
    m[p + 31] += 1;
    while (m[p + 16]) {
        p += -9;
    }
    m[p + 16] += m[p + 24];
    m[p + 24] = 0;
    while (m[p + 16]) {
        m[p + 16] -= 1;
        m[p + 24] += 1;
        m[p + 24] = 0;
        while (m[p + 25]) {
            p += 9;
        }
        while (m[p + 16]) {
            m[p + 17] += m[p + 24];
            m[p + 24] = 0;
            while (m[p + 17]) {
                m[p + 17] -= 1;
                m[p + 24] += 1;
                while (m[p + 16]) {
                    p += -9;
                }
                m[p + 24] = 1;
                p += 9;
            }
            p -= 9;
        }
    }
    m[p + 16] += m[p + 24];
    m[p + 24] = 0;
    while (m[p + 16]) {
        m[p + 16] -= 1;
        m[p + 24] += 1;
        while (m[p + 25]) {
            m[p + 26] += 1;
            if (m[p + 31]) {
                m[p + 26] -= m[p + 31];
                m[p + 31] = 0;
            }
            m[p + 31] += m[p + 26];
            m[p + 26] = 0;
            p += 9;
        }
        m[p + 24] += 1;
        while (m[p + 16]) {
            m[p + 24] += m[p + 22];
            m[p + 22] = 0;
            p -= 9;
        }
        while (m[p + 25]) {
            p += 9;
        }
        while (m[p + 16]) {
            m[p + 17] = 0;
            m[p + 16] -= 1;
            while (m[p + 24]) {
                m[p + 24] -= 1;
                m[p + 16] += 1;
                while (m[p + 17]) {
                    m[p + 16] -= 1;
                    m[p + 17] -= 1;
                    m[p + 15] += 1;
                }
                m[p + 17] += m[p + 16];
                m[p + 16] = 0;
            }
            m[p + 24] += m[p + 17];
            m[p + 17] = 0;
            m[p + 16] += 1;
            p -= 9;
        }
        m[p + 24] -= 1;
        m[p + 19] = 1;
    }
    m[p + 16] += 1;
    if (m[p + 24]) {
        m[p + 16] -= m[p + 24];
        m[p + 24] = 0;
    }
    m[p + 24] += 1;
    while (m[p + 16]) {
        m[p + 16] -= 1;
        m[p + 24] -= 1;
        while (m[p + 25]) {
            m[p + 33] += m[p + 31];
            m[p + 31] = 0;
            p += 9;
        }
        while (m[p + 16]) {
            m[p + 17] = 0;
            m[p + 16] -= 1;
            while (m[p + 24]) {
                m[p + 24] -= 1;
                m[p + 16] += 1;
                while (m[p + 17]) {
                    m[p + 16] -= 1;
                    m[p + 17] -= 1;
                    m[p + 15] += 1;
                }
                m[p + 17] += m[p + 16];
                m[p + 16] = 0;
            }
            m[p + 24] += m[p + 17];
            m[p + 17] = 0;
            m[p + 16] += 1;
            p -= 9;
        }
        m[p + 17] += 5;
        while (m[p + 17]) {
            m[p + 17] -= 1;
            m[p + 26] += m[p + 17];
            m[p + 17] = 0;
            p += 9;
        }
        m[p + 22] += 1;
        m[p + 49] += 1;
        while (m[p + 43]) {
            p += -9;
        }
        while (m[p + 52]) {
            if (m[p + 58]) {
                m[p + 52] -= m[p + 58];
                m[p + 58] = 0;
            }
            m[p + 58] += 1;
            while (m[p + 52]) {
                m[p + 52] -= 1;
                m[p + 58] -= 1;
                m[p + 52] += m[p + 60];
                m[p + 60] = 0;
                while (m[p + 52]) {
                    m[p + 52] -= 1;
                    m[p + 60] += 1;
                    while (m[p + 43]) {
                        p += -9;
                    }
                    m[p + 47] = 1;
                    while (m[p + 52]) {
                        p += 9;
                    }
                    m[p + 53] += 1;
                }
            }
            m[p + 52] += 1;
            if (m[p + 60]) {
                m[p + 52] -= m[p + 60];
                m[p + 60] = 0;
            }
            m[p + 60] += 1;
            while (m[p + 52]) {
                m[p + 52] -= 1;
                m[p + 60] -= 1;
                m[p + 52] += m[p + 58];
                m[p + 58] = 0;
                while (m[p + 52]) {
                    m[p + 52] -= 1;
                    m[p + 58] += 1;
                    while (m[p + 43]) {
                        p += -9;
                    }
                    m[p + 46] = 1;
                    while (m[p + 52]) {
                        p += 9;
                    }
                    m[p + 53] = 1;
                }
            }
            m[p + 52] += 1;
            while (m[p + 53]) {
                m[p + 53] -= 1;
                while (m[p + 52]) {
                    p += 9;
                }
                p -= 9;
            }
            p += 9;
        }
        while (m[p + 43]) {
            p += -9;
        }
        m[p + 47] = 0;
        m[p + 44] += 5;
        while (m[p + 44]) {
            m[p + 44] -= 1;
            m[p + 53] += m[p + 44];
            m[p + 44] = 0;
            p += 9;
        }
        m[p + 49] -= 1;
        m[p + 76] -= 1;
        while (m[p + 70]) {
            p += -9;
        }
        p += 54;
    }
    p -= 9;
}
